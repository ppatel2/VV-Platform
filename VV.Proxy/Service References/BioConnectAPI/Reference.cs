//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VV.Proxy.BioConnectAPI {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
    [System.SerializableAttribute()]
    public partial class BioConnectException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitusDeviceGroupDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class DigitusDeviceGroupDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ToDeleteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ToDelete {
            get {
                return this.ToDeleteField;
            }
            set {
                if ((this.ToDeleteField.Equals(value) != true)) {
                    this.ToDeleteField = value;
                    this.RaisePropertyChanged("ToDelete");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitusDeviceScheduleDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class DigitusDeviceScheduleDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, int> DeviceTimebandPairsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GroupGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ToDeleteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, int> DeviceTimebandPairs {
            get {
                return this.DeviceTimebandPairsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceTimebandPairsField, value) != true)) {
                    this.DeviceTimebandPairsField = value;
                    this.RaisePropertyChanged("DeviceTimebandPairs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GroupGuid {
            get {
                return this.GroupGuidField;
            }
            set {
                if ((this.GroupGuidField.Equals(value) != true)) {
                    this.GroupGuidField = value;
                    this.RaisePropertyChanged("GroupGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ToDelete {
            get {
                return this.ToDeleteField;
            }
            set {
                if ((this.ToDeleteField.Equals(value) != true)) {
                    this.ToDeleteField = value;
                    this.RaisePropertyChanged("ToDelete");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitusTimebandDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class DigitusTimebandDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ToDeleteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ToDelete {
            get {
                return this.ToDeleteField;
            }
            set {
                if ((this.ToDeleteField.Equals(value) != true)) {
                    this.ToDeleteField = value;
                    this.RaisePropertyChanged("ToDelete");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitusDeviceDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class DigitusDeviceDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Auth1Unlocks2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Auth2Unlocks1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ControllerGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeviceGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoorForcedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntryDelayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExitDelayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForcedLatchAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GroupGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeDeviceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProppedDelayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProppedSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SecurityLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte Status1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte Status2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte Status3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TamperAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedField, value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Auth1Unlocks2 {
            get {
                return this.Auth1Unlocks2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Auth1Unlocks2Field, value) != true)) {
                    this.Auth1Unlocks2Field = value;
                    this.RaisePropertyChanged("Auth1Unlocks2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Auth2Unlocks1 {
            get {
                return this.Auth2Unlocks1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Auth2Unlocks1Field, value) != true)) {
                    this.Auth2Unlocks1Field = value;
                    this.RaisePropertyChanged("Auth2Unlocks1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ControllerGuid {
            get {
                return this.ControllerGuidField;
            }
            set {
                if ((this.ControllerGuidField.Equals(value) != true)) {
                    this.ControllerGuidField = value;
                    this.RaisePropertyChanged("ControllerGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceGuid {
            get {
                return this.DeviceGuidField;
            }
            set {
                if ((this.DeviceGuidField.Equals(value) != true)) {
                    this.DeviceGuidField = value;
                    this.RaisePropertyChanged("DeviceGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoorForced {
            get {
                return this.DoorForcedField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorForcedField, value) != true)) {
                    this.DoorForcedField = value;
                    this.RaisePropertyChanged("DoorForced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntryDelay {
            get {
                return this.EntryDelayField;
            }
            set {
                if ((this.EntryDelayField.Equals(value) != true)) {
                    this.EntryDelayField = value;
                    this.RaisePropertyChanged("EntryDelay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExitDelay {
            get {
                return this.ExitDelayField;
            }
            set {
                if ((this.ExitDelayField.Equals(value) != true)) {
                    this.ExitDelayField = value;
                    this.RaisePropertyChanged("ExitDelay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForcedLatchAlarm {
            get {
                return this.ForcedLatchAlarmField;
            }
            set {
                if ((object.ReferenceEquals(this.ForcedLatchAlarmField, value) != true)) {
                    this.ForcedLatchAlarmField = value;
                    this.RaisePropertyChanged("ForcedLatchAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GroupGuid {
            get {
                return this.GroupGuidField;
            }
            set {
                if ((this.GroupGuidField.Equals(value) != true)) {
                    this.GroupGuidField = value;
                    this.RaisePropertyChanged("GroupGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeDeviceNumber {
            get {
                return this.NodeDeviceNumberField;
            }
            set {
                if ((this.NodeDeviceNumberField.Equals(value) != true)) {
                    this.NodeDeviceNumberField = value;
                    this.RaisePropertyChanged("NodeDeviceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeSerialNumber {
            get {
                return this.NodeSerialNumberField;
            }
            set {
                if ((this.NodeSerialNumberField.Equals(value) != true)) {
                    this.NodeSerialNumberField = value;
                    this.RaisePropertyChanged("NodeSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProppedDelay {
            get {
                return this.ProppedDelayField;
            }
            set {
                if ((this.ProppedDelayField.Equals(value) != true)) {
                    this.ProppedDelayField = value;
                    this.RaisePropertyChanged("ProppedDelay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProppedSeconds {
            get {
                return this.ProppedSecondsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProppedSecondsField, value) != true)) {
                    this.ProppedSecondsField = value;
                    this.RaisePropertyChanged("ProppedSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SecurityLevel {
            get {
                return this.SecurityLevelField;
            }
            set {
                if ((this.SecurityLevelField.Equals(value) != true)) {
                    this.SecurityLevelField = value;
                    this.RaisePropertyChanged("SecurityLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status1 {
            get {
                return this.Status1Field;
            }
            set {
                if ((this.Status1Field.Equals(value) != true)) {
                    this.Status1Field = value;
                    this.RaisePropertyChanged("Status1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status2 {
            get {
                return this.Status2Field;
            }
            set {
                if ((this.Status2Field.Equals(value) != true)) {
                    this.Status2Field = value;
                    this.RaisePropertyChanged("Status2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status3 {
            get {
                return this.Status3Field;
            }
            set {
                if ((this.Status3Field.Equals(value) != true)) {
                    this.Status3Field = value;
                    this.RaisePropertyChanged("Status3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TamperAlarm {
            get {
                return this.TamperAlarmField;
            }
            set {
                if ((object.ReferenceEquals(this.TamperAlarmField, value) != true)) {
                    this.TamperAlarmField = value;
                    this.RaisePropertyChanged("TamperAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitusEnlineDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class DigitusEnlineDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ControllerGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EnlineGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Has125IdReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HasFingerReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HasRfidReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeSerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecurityLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowClockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TwelveHourClockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UkDateFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateEnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Use125IdReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseFingerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsePinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseRfidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedField, value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ControllerGuid {
            get {
                return this.ControllerGuidField;
            }
            set {
                if ((this.ControllerGuidField.Equals(value) != true)) {
                    this.ControllerGuidField = value;
                    this.RaisePropertyChanged("ControllerGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EnlineGuid {
            get {
                return this.EnlineGuidField;
            }
            set {
                if ((this.EnlineGuidField.Equals(value) != true)) {
                    this.EnlineGuidField = value;
                    this.RaisePropertyChanged("EnlineGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Has125IdReader {
            get {
                return this.Has125IdReaderField;
            }
            set {
                if ((object.ReferenceEquals(this.Has125IdReaderField, value) != true)) {
                    this.Has125IdReaderField = value;
                    this.RaisePropertyChanged("Has125IdReader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HasFingerReader {
            get {
                return this.HasFingerReaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HasFingerReaderField, value) != true)) {
                    this.HasFingerReaderField = value;
                    this.RaisePropertyChanged("HasFingerReader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HasRfidReader {
            get {
                return this.HasRfidReaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HasRfidReaderField, value) != true)) {
                    this.HasRfidReaderField = value;
                    this.RaisePropertyChanged("HasRfidReader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeSerialNumber {
            get {
                return this.NodeSerialNumberField;
            }
            set {
                if ((this.NodeSerialNumberField.Equals(value) != true)) {
                    this.NodeSerialNumberField = value;
                    this.RaisePropertyChanged("NodeSerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecurityLevel {
            get {
                return this.SecurityLevelField;
            }
            set {
                if ((this.SecurityLevelField.Equals(value) != true)) {
                    this.SecurityLevelField = value;
                    this.RaisePropertyChanged("SecurityLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowClock {
            get {
                return this.ShowClockField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowClockField, value) != true)) {
                    this.ShowClockField = value;
                    this.RaisePropertyChanged("ShowClock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TwelveHourClock {
            get {
                return this.TwelveHourClockField;
            }
            set {
                if ((object.ReferenceEquals(this.TwelveHourClockField, value) != true)) {
                    this.TwelveHourClockField = value;
                    this.RaisePropertyChanged("TwelveHourClock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UkDateFormat {
            get {
                return this.UkDateFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.UkDateFormatField, value) != true)) {
                    this.UkDateFormatField = value;
                    this.RaisePropertyChanged("UkDateFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateEnline {
            get {
                return this.UpdateEnlineField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateEnlineField, value) != true)) {
                    this.UpdateEnlineField = value;
                    this.RaisePropertyChanged("UpdateEnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Use125IdReader {
            get {
                return this.Use125IdReaderField;
            }
            set {
                if ((object.ReferenceEquals(this.Use125IdReaderField, value) != true)) {
                    this.Use125IdReaderField = value;
                    this.RaisePropertyChanged("Use125IdReader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseFinger {
            get {
                return this.UseFingerField;
            }
            set {
                if ((object.ReferenceEquals(this.UseFingerField, value) != true)) {
                    this.UseFingerField = value;
                    this.RaisePropertyChanged("UseFinger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsePin {
            get {
                return this.UsePinField;
            }
            set {
                if ((object.ReferenceEquals(this.UsePinField, value) != true)) {
                    this.UsePinField = value;
                    this.RaisePropertyChanged("UsePin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseRfid {
            get {
                return this.UseRfidField;
            }
            set {
                if ((object.ReferenceEquals(this.UseRfidField, value) != true)) {
                    this.UseRfidField = value;
                    this.RaisePropertyChanged("UseRfid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitusControllerDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class DigitusControllerDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ControllerFirmwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ControllerFpgaVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnlineFirmwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnlineFpgaVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GatewayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAssignmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MacField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemoteNodeFirmwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemoteNodeFpgaVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemotePortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubnetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitModelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ControllerFirmwareVersion {
            get {
                return this.ControllerFirmwareVersionField;
            }
            set {
                if ((this.ControllerFirmwareVersionField.Equals(value) != true)) {
                    this.ControllerFirmwareVersionField = value;
                    this.RaisePropertyChanged("ControllerFirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ControllerFpgaVersion {
            get {
                return this.ControllerFpgaVersionField;
            }
            set {
                if ((this.ControllerFpgaVersionField.Equals(value) != true)) {
                    this.ControllerFpgaVersionField = value;
                    this.RaisePropertyChanged("ControllerFpgaVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadLogs {
            get {
                return this.DownloadLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadLogsField, value) != true)) {
                    this.DownloadLogsField = value;
                    this.RaisePropertyChanged("DownloadLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnlineFirmwareVersion {
            get {
                return this.EnlineFirmwareVersionField;
            }
            set {
                if ((this.EnlineFirmwareVersionField.Equals(value) != true)) {
                    this.EnlineFirmwareVersionField = value;
                    this.RaisePropertyChanged("EnlineFirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnlineFpgaVersion {
            get {
                return this.EnlineFpgaVersionField;
            }
            set {
                if ((this.EnlineFpgaVersionField.Equals(value) != true)) {
                    this.EnlineFpgaVersionField = value;
                    this.RaisePropertyChanged("EnlineFpgaVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gateway {
            get {
                return this.GatewayField;
            }
            set {
                if ((object.ReferenceEquals(this.GatewayField, value) != true)) {
                    this.GatewayField = value;
                    this.RaisePropertyChanged("Gateway");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((object.ReferenceEquals(this.GuidField, value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAssignment {
            get {
                return this.IpAssignmentField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAssignmentField, value) != true)) {
                    this.IpAssignmentField = value;
                    this.RaisePropertyChanged("IpAssignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mac {
            get {
                return this.MacField;
            }
            set {
                if ((object.ReferenceEquals(this.MacField, value) != true)) {
                    this.MacField = value;
                    this.RaisePropertyChanged("Mac");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Online {
            get {
                return this.OnlineField;
            }
            set {
                if ((object.ReferenceEquals(this.OnlineField, value) != true)) {
                    this.OnlineField = value;
                    this.RaisePropertyChanged("Online");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemoteNodeFirmwareVersion {
            get {
                return this.RemoteNodeFirmwareVersionField;
            }
            set {
                if ((this.RemoteNodeFirmwareVersionField.Equals(value) != true)) {
                    this.RemoteNodeFirmwareVersionField = value;
                    this.RaisePropertyChanged("RemoteNodeFirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemoteNodeFpgaVersion {
            get {
                return this.RemoteNodeFpgaVersionField;
            }
            set {
                if ((this.RemoteNodeFpgaVersionField.Equals(value) != true)) {
                    this.RemoteNodeFpgaVersionField = value;
                    this.RaisePropertyChanged("RemoteNodeFpgaVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemotePort {
            get {
                return this.RemotePortField;
            }
            set {
                if ((object.ReferenceEquals(this.RemotePortField, value) != true)) {
                    this.RemotePortField = value;
                    this.RaisePropertyChanged("RemotePort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subnet {
            get {
                return this.SubnetField;
            }
            set {
                if ((object.ReferenceEquals(this.SubnetField, value) != true)) {
                    this.SubnetField = value;
                    this.RaisePropertyChanged("Subnet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitModel {
            get {
                return this.UnitModelField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitModelField, value) != true)) {
                    this.UnitModelField = value;
                    this.RaisePropertyChanged("UnitModel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitusControllerNodeDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class DigitusControllerNodeDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControllerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeSerialNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControllerId {
            get {
                return this.ControllerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ControllerIdField, value) != true)) {
                    this.ControllerIdField = value;
                    this.RaisePropertyChanged("ControllerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeSerialNumber {
            get {
                return this.NodeSerialNumberField;
            }
            set {
                if ((this.NodeSerialNumberField.Equals(value) != true)) {
                    this.NodeSerialNumberField = value;
                    this.RaisePropertyChanged("NodeSerialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitusAlarmDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class DigitusAlarmDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AckedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AlarmGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClearedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ControllerGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeviceGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EventGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AckedTime {
            get {
                return this.AckedTimeField;
            }
            set {
                if ((this.AckedTimeField.Equals(value) != true)) {
                    this.AckedTimeField = value;
                    this.RaisePropertyChanged("AckedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActiveTime {
            get {
                return this.ActiveTimeField;
            }
            set {
                if ((this.ActiveTimeField.Equals(value) != true)) {
                    this.ActiveTimeField = value;
                    this.RaisePropertyChanged("ActiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AlarmGuid {
            get {
                return this.AlarmGuidField;
            }
            set {
                if ((this.AlarmGuidField.Equals(value) != true)) {
                    this.AlarmGuidField = value;
                    this.RaisePropertyChanged("AlarmGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmType {
            get {
                return this.AlarmTypeField;
            }
            set {
                if ((this.AlarmTypeField.Equals(value) != true)) {
                    this.AlarmTypeField = value;
                    this.RaisePropertyChanged("AlarmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClearedTime {
            get {
                return this.ClearedTimeField;
            }
            set {
                if ((this.ClearedTimeField.Equals(value) != true)) {
                    this.ClearedTimeField = value;
                    this.RaisePropertyChanged("ClearedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ControllerGuid {
            get {
                return this.ControllerGuidField;
            }
            set {
                if ((this.ControllerGuidField.Equals(value) != true)) {
                    this.ControllerGuidField = value;
                    this.RaisePropertyChanged("ControllerGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceGuid {
            get {
                return this.DeviceGuidField;
            }
            set {
                if ((this.DeviceGuidField.Equals(value) != true)) {
                    this.DeviceGuidField = value;
                    this.RaisePropertyChanged("DeviceGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceNumber {
            get {
                return this.DeviceNumberField;
            }
            set {
                if ((this.DeviceNumberField.Equals(value) != true)) {
                    this.DeviceNumberField = value;
                    this.RaisePropertyChanged("DeviceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceTypeField, value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EventGuid {
            get {
                return this.EventGuidField;
            }
            set {
                if ((this.EventGuidField.Equals(value) != true)) {
                    this.EventGuidField = value;
                    this.RaisePropertyChanged("EventGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((this.EventTypeField.Equals(value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastAction {
            get {
                return this.LastActionField;
            }
            set {
                if ((this.LastActionField.Equals(value) != true)) {
                    this.LastActionField = value;
                    this.RaisePropertyChanged("LastAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeSN {
            get {
                return this.NodeSNField;
            }
            set {
                if ((this.NodeSNField.Equals(value) != true)) {
                    this.NodeSNField = value;
                    this.RaisePropertyChanged("NodeSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitusEventDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class DigitusEventDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActivityRecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeviceGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EventGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SystemDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActivityRecordId {
            get {
                return this.ActivityRecordIdField;
            }
            set {
                if ((this.ActivityRecordIdField.Equals(value) != true)) {
                    this.ActivityRecordIdField = value;
                    this.RaisePropertyChanged("ActivityRecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceGuid {
            get {
                return this.DeviceGuidField;
            }
            set {
                if ((this.DeviceGuidField.Equals(value) != true)) {
                    this.DeviceGuidField = value;
                    this.RaisePropertyChanged("DeviceGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EventGuid {
            get {
                return this.EventGuidField;
            }
            set {
                if ((this.EventGuidField.Equals(value) != true)) {
                    this.EventGuidField = value;
                    this.RaisePropertyChanged("EventGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((this.EventTypeField.Equals(value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SystemDateTime {
            get {
                return this.SystemDateTimeField;
            }
            set {
                if ((this.SystemDateTimeField.Equals(value) != true)) {
                    this.SystemDateTimeField = value;
                    this.RaisePropertyChanged("SystemDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusTimebandDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEnlineDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusAlarmDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEventDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.CardDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.CardDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.LocationDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.LocationDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceTemplateObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceTemplateObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FingerDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FingerDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TemplateObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TemplateObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.PropertyDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.PropertyDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersStubDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersStubDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersBasicInfoDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersBasicInfoDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReaderDescriptionsDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.CardforFaceOperationModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.OperationModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.CardReadModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.FaceOperationModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.CardFormatEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.ProfileEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.TemplateTypeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.TypeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.WiegandOutputEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FingerDataObject.FingerCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersAdminDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ActivityRecordsDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ActivityRecordsDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersStubDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersStubDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersCountsDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEnlineDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusTimebandDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEventDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusAlarmDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardforFaceOperationModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.OperationModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardReadModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.FaceOperationModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardFormatEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.ProfileEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.TemplateTypeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.TypeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.WiegandOutputEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.FingerDataObject.FingerCode, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TransformedBitmap))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapCacheOption))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapCreateOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Rotation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ImageSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Transform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.GeneralTransform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Animatable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Freezable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DependencyObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Int32Rect))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DispatcherObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.IO.Stream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.MarshalByRefObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Net.Cache.RequestCachePolicy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.KeyValuePair<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.SecurityTokenDto))]
    public partial class UsersDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.CardDataObject[] CardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevicePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FaceCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.FaceDataObject[] FacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.FingerDataObject[] FingersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FingersCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.BitmapImage ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdministratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeviceAdministratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.LocationDataObject[] LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.PropertyDataObject[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplatesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.TransformedBitmap ThumbnailImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object UserVMField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.CardDataObject[] Cards {
            get {
                return this.CardsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardsField, value) != true)) {
                    this.CardsField = value;
                    this.RaisePropertyChanged("Cards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardsCount {
            get {
                return this.CardsCountField;
            }
            set {
                if ((this.CardsCountField.Equals(value) != true)) {
                    this.CardsCountField = value;
                    this.RaisePropertyChanged("CardsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevicePassword {
            get {
                return this.DevicePasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.DevicePasswordField, value) != true)) {
                    this.DevicePasswordField = value;
                    this.RaisePropertyChanged("DevicePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FaceCount {
            get {
                return this.FaceCountField;
            }
            set {
                if ((this.FaceCountField.Equals(value) != true)) {
                    this.FaceCountField = value;
                    this.RaisePropertyChanged("FaceCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.FaceDataObject[] Faces {
            get {
                return this.FacesField;
            }
            set {
                if ((object.ReferenceEquals(this.FacesField, value) != true)) {
                    this.FacesField = value;
                    this.RaisePropertyChanged("Faces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacesCount {
            get {
                return this.FacesCountField;
            }
            set {
                if ((this.FacesCountField.Equals(value) != true)) {
                    this.FacesCountField = value;
                    this.RaisePropertyChanged("FacesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.FingerDataObject[] Fingers {
            get {
                return this.FingersField;
            }
            set {
                if ((object.ReferenceEquals(this.FingersField, value) != true)) {
                    this.FingersField = value;
                    this.RaisePropertyChanged("Fingers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FingersCount {
            get {
                return this.FingersCountField;
            }
            set {
                if ((this.FingersCountField.Equals(value) != true)) {
                    this.FingersCountField = value;
                    this.RaisePropertyChanged("FingersCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.BitmapImage Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdministrator {
            get {
                return this.IsAdministratorField;
            }
            set {
                if ((this.IsAdministratorField.Equals(value) != true)) {
                    this.IsAdministratorField = value;
                    this.RaisePropertyChanged("IsAdministrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeviceAdministrator {
            get {
                return this.IsDeviceAdministratorField;
            }
            set {
                if ((this.IsDeviceAdministratorField.Equals(value) != true)) {
                    this.IsDeviceAdministratorField = value;
                    this.RaisePropertyChanged("IsDeviceAdministrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.LocationDataObject[] Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.PropertyDataObject[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplatesCount {
            get {
                return this.TemplatesCountField;
            }
            set {
                if ((this.TemplatesCountField.Equals(value) != true)) {
                    this.TemplatesCountField = value;
                    this.RaisePropertyChanged("TemplatesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.TransformedBitmap ThumbnailImage {
            get {
                return this.ThumbnailImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailImageField, value) != true)) {
                    this.ThumbnailImageField = value;
                    this.RaisePropertyChanged("ThumbnailImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object UserVM {
            get {
                return this.UserVMField;
            }
            set {
                if ((object.ReferenceEquals(this.UserVMField, value) != true)) {
                    this.UserVMField = value;
                    this.RaisePropertyChanged("UserVM");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BitmapImage", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Media.Imaging")]
    [System.SerializableAttribute()]
    public partial class BitmapImage : VV.Proxy.BioConnectAPI.BitmapSource {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri BaseUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.BitmapCacheOption CacheOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.BitmapCreateOptions CreateOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DecodePixelHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DecodePixelWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.Rotation RotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.Int32Rect SourceRectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.Stream StreamSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Net.Cache.RequestCachePolicy UriCachePolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri UriSourceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri BaseUri {
            get {
                return this.BaseUriField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseUriField, value) != true)) {
                    this.BaseUriField = value;
                    this.RaisePropertyChanged("BaseUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.BitmapCacheOption CacheOption {
            get {
                return this.CacheOptionField;
            }
            set {
                if ((this.CacheOptionField.Equals(value) != true)) {
                    this.CacheOptionField = value;
                    this.RaisePropertyChanged("CacheOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.BitmapCreateOptions CreateOptions {
            get {
                return this.CreateOptionsField;
            }
            set {
                if ((this.CreateOptionsField.Equals(value) != true)) {
                    this.CreateOptionsField = value;
                    this.RaisePropertyChanged("CreateOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DecodePixelHeight {
            get {
                return this.DecodePixelHeightField;
            }
            set {
                if ((this.DecodePixelHeightField.Equals(value) != true)) {
                    this.DecodePixelHeightField = value;
                    this.RaisePropertyChanged("DecodePixelHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DecodePixelWidth {
            get {
                return this.DecodePixelWidthField;
            }
            set {
                if ((this.DecodePixelWidthField.Equals(value) != true)) {
                    this.DecodePixelWidthField = value;
                    this.RaisePropertyChanged("DecodePixelWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.Rotation Rotation {
            get {
                return this.RotationField;
            }
            set {
                if ((this.RotationField.Equals(value) != true)) {
                    this.RotationField = value;
                    this.RaisePropertyChanged("Rotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.Int32Rect SourceRect {
            get {
                return this.SourceRectField;
            }
            set {
                if ((this.SourceRectField.Equals(value) != true)) {
                    this.SourceRectField = value;
                    this.RaisePropertyChanged("SourceRect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.Stream StreamSource {
            get {
                return this.StreamSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.StreamSourceField, value) != true)) {
                    this.StreamSourceField = value;
                    this.RaisePropertyChanged("StreamSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Net.Cache.RequestCachePolicy UriCachePolicy {
            get {
                return this.UriCachePolicyField;
            }
            set {
                if ((object.ReferenceEquals(this.UriCachePolicyField, value) != true)) {
                    this.UriCachePolicyField = value;
                    this.RaisePropertyChanged("UriCachePolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri UriSource {
            get {
                return this.UriSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.UriSourceField, value) != true)) {
                    this.UriSourceField = value;
                    this.RaisePropertyChanged("UriSource");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransformedBitmap", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Media.Imaging")]
    [System.SerializableAttribute()]
    public partial class TransformedBitmap : VV.Proxy.BioConnectAPI.BitmapSource {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.BitmapSource SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.Transform TransformField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.BitmapSource Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.Transform Transform {
            get {
                return this.TransformField;
            }
            set {
                if ((object.ReferenceEquals(this.TransformField, value) != true)) {
                    this.TransformField = value;
                    this.RaisePropertyChanged("Transform");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class CardDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BadgeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CredentialTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FacilityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBypassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.LocationDataObject[] LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.TransformedBitmap TypeImageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BadgeNumber {
            get {
                return this.BadgeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BadgeNumberField, value) != true)) {
                    this.BadgeNumberField = value;
                    this.RaisePropertyChanged("BadgeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CredentialType {
            get {
                return this.CredentialTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialTypeField, value) != true)) {
                    this.CredentialTypeField = value;
                    this.RaisePropertyChanged("CredentialType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FacilityCode {
            get {
                return this.FacilityCodeField;
            }
            set {
                if ((this.FacilityCodeField.Equals(value) != true)) {
                    this.FacilityCodeField = value;
                    this.RaisePropertyChanged("FacilityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBypass {
            get {
                return this.IsBypassField;
            }
            set {
                if ((this.IsBypassField.Equals(value) != true)) {
                    this.IsBypassField = value;
                    this.RaisePropertyChanged("IsBypass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.LocationDataObject[] Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIN {
            get {
                return this.PINField;
            }
            set {
                if ((object.ReferenceEquals(this.PINField, value) != true)) {
                    this.PINField = value;
                    this.RaisePropertyChanged("PIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.TransformedBitmap TypeImage {
            get {
                return this.TypeImageField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeImageField, value) != true)) {
                    this.TypeImageField = value;
                    this.RaisePropertyChanged("TypeImage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class LocationDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaceDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class FaceDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QualityScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.FaceTemplateObject[] TemplateDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nIndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseLevel {
            get {
                return this.EnterpriseLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseLevelField, value) != true)) {
                    this.EnterpriseLevelField = value;
                    this.RaisePropertyChanged("EnterpriseLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QualityScore {
            get {
                return this.QualityScoreField;
            }
            set {
                if ((this.QualityScoreField.Equals(value) != true)) {
                    this.QualityScoreField = value;
                    this.RaisePropertyChanged("QualityScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.FaceTemplateObject[] TemplateData {
            get {
                return this.TemplateDataField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateDataField, value) != true)) {
                    this.TemplateDataField = value;
                    this.RaisePropertyChanged("TemplateData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nIndex {
            get {
                return this.nIndexField;
            }
            set {
                if ((this.nIndexField.Equals(value) != true)) {
                    this.nIndexField = value;
                    this.RaisePropertyChanged("nIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaceTemplateObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class FaceTemplateObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ChecksumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Checksum {
            get {
                return this.ChecksumField;
            }
            set {
                if ((this.ChecksumField.Equals(value) != true)) {
                    this.ChecksumField = value;
                    this.RaisePropertyChanged("Checksum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseLevel {
            get {
                return this.EnterpriseLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseLevelField, value) != true)) {
                    this.EnterpriseLevelField = value;
                    this.RaisePropertyChanged("EnterpriseLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nIndex {
            get {
                return this.nIndexField;
            }
            set {
                if ((this.nIndexField.Equals(value) != true)) {
                    this.nIndexField = value;
                    this.RaisePropertyChanged("nIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nType {
            get {
                return this.nTypeField;
            }
            set {
                if ((this.nTypeField.Equals(value) != true)) {
                    this.nTypeField = value;
                    this.RaisePropertyChanged("nType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FingerDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class FingerDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FingerIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.TemplateObject[] TemplatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedAtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FingerIndex {
            get {
                return this.FingerIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.FingerIndexField, value) != true)) {
                    this.FingerIndexField = value;
                    this.RaisePropertyChanged("FingerIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.TemplateObject[] Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="FingerDataObject.FingerCode", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
        public enum FingerCode : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            LeftThumb = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            LeftIndexFinger = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            LeftMiddleFinger = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            LeftRingFinger = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            LeftLittleFinger = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RightThumb = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RightIndexFinger = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RightMiddleFinger = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RightRingFinger = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RightLittleFinger = 9,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class TemplateObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ChecksumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FingerIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QualityScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VV.Proxy.BioConnectAPI.BitmapSource RepresentationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Checksum {
            get {
                return this.ChecksumField;
            }
            set {
                if ((this.ChecksumField.Equals(value) != true)) {
                    this.ChecksumField = value;
                    this.RaisePropertyChanged("Checksum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FingerIndex {
            get {
                return this.FingerIndexField;
            }
            set {
                if ((this.FingerIndexField.Equals(value) != true)) {
                    this.FingerIndexField = value;
                    this.RaisePropertyChanged("FingerIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QualityScore {
            get {
                return this.QualityScoreField;
            }
            set {
                if ((this.QualityScoreField.Equals(value) != true)) {
                    this.QualityScoreField = value;
                    this.RaisePropertyChanged("QualityScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VV.Proxy.BioConnectAPI.BitmapSource Representation {
            get {
                return this.RepresentationField;
            }
            set {
                if ((object.ReferenceEquals(this.RepresentationField, value) != true)) {
                    this.RepresentationField = value;
                    this.RaisePropertyChanged("Representation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class PropertyDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, string> PropertyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string> Property {
            get {
                return this.PropertyField;
            }
            set {
                if ((this.PropertyField.Equals(value) != true)) {
                    this.PropertyField = value;
                    this.RaisePropertyChanged("Property");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadersStubDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusTimebandDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEnlineDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusAlarmDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEventDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.CardDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.CardDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.LocationDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.LocationDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceTemplateObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceTemplateObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FingerDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FingerDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TemplateObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TemplateObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.PropertyDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.PropertyDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersStubDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersBasicInfoDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersBasicInfoDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReaderDescriptionsDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.CardforFaceOperationModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.OperationModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.CardReadModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.FaceOperationModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.CardFormatEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.ProfileEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.TemplateTypeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.TypeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.WiegandOutputEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FingerDataObject.FingerCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersAdminDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ActivityRecordsDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ActivityRecordsDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersStubDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersStubDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersCountsDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEnlineDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusTimebandDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEventDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusAlarmDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardforFaceOperationModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.OperationModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardReadModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.FaceOperationModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardFormatEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.ProfileEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.TemplateTypeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.TypeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.WiegandOutputEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.FingerDataObject.FingerCode, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TransformedBitmap))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapCacheOption))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapCreateOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Rotation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ImageSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Transform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.GeneralTransform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Animatable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Freezable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DependencyObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Int32Rect))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DispatcherObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.IO.Stream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.MarshalByRefObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Net.Cache.RequestCachePolicy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.KeyValuePair<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.SecurityTokenDto))]
    public partial class ReadersStubDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ReaderDataObjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultReader {
            get {
                return this.DefaultReaderField;
            }
            set {
                if ((this.DefaultReaderField.Equals(value) != true)) {
                    this.DefaultReaderField = value;
                    this.RaisePropertyChanged("DefaultReader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((this.DeviceIDField.Equals(value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Online {
            get {
                return this.OnlineField;
            }
            set {
                if ((this.OnlineField.Equals(value) != true)) {
                    this.OnlineField = value;
                    this.RaisePropertyChanged("Online");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ReaderDataObject {
            get {
                return this.ReaderDataObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderDataObjectField, value) != true)) {
                    this.ReaderDataObjectField = value;
                    this.RaisePropertyChanged("ReaderDataObject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadersDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class ReadersDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardFaceOperationModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CardFaceOperationModeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CardFormatCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardReadModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CardReadModeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DHCPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceHandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaceOperationModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FaceOperationModeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacilityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GatewayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KernelVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastSyncField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OperationModeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProfileCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerIPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubnetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TemplateTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TimeSyncField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseServerMatchingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseServerModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WiegandOutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WiegandOutputCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WiegandPassthroughField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardFaceOperationMode {
            get {
                return this.CardFaceOperationModeField;
            }
            set {
                if ((object.ReferenceEquals(this.CardFaceOperationModeField, value) != true)) {
                    this.CardFaceOperationModeField = value;
                    this.RaisePropertyChanged("CardFaceOperationMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CardFaceOperationModeCode {
            get {
                return this.CardFaceOperationModeCodeField;
            }
            set {
                if ((this.CardFaceOperationModeCodeField.Equals(value) != true)) {
                    this.CardFaceOperationModeCodeField = value;
                    this.RaisePropertyChanged("CardFaceOperationModeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardFormat {
            get {
                return this.CardFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.CardFormatField, value) != true)) {
                    this.CardFormatField = value;
                    this.RaisePropertyChanged("CardFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CardFormatCode {
            get {
                return this.CardFormatCodeField;
            }
            set {
                if ((this.CardFormatCodeField.Equals(value) != true)) {
                    this.CardFormatCodeField = value;
                    this.RaisePropertyChanged("CardFormatCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardOffset {
            get {
                return this.CardOffsetField;
            }
            set {
                if ((this.CardOffsetField.Equals(value) != true)) {
                    this.CardOffsetField = value;
                    this.RaisePropertyChanged("CardOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardReadMode {
            get {
                return this.CardReadModeField;
            }
            set {
                if ((object.ReferenceEquals(this.CardReadModeField, value) != true)) {
                    this.CardReadModeField = value;
                    this.RaisePropertyChanged("CardReadMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CardReadModeCode {
            get {
                return this.CardReadModeCodeField;
            }
            set {
                if ((this.CardReadModeCodeField.Equals(value) != true)) {
                    this.CardReadModeCodeField = value;
                    this.RaisePropertyChanged("CardReadModeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DHCP {
            get {
                return this.DHCPField;
            }
            set {
                if ((this.DHCPField.Equals(value) != true)) {
                    this.DHCPField = value;
                    this.RaisePropertyChanged("DHCP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultReader {
            get {
                return this.DefaultReaderField;
            }
            set {
                if ((this.DefaultReaderField.Equals(value) != true)) {
                    this.DefaultReaderField = value;
                    this.RaisePropertyChanged("DefaultReader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceHandle {
            get {
                return this.DeviceHandleField;
            }
            set {
                if ((this.DeviceHandleField.Equals(value) != true)) {
                    this.DeviceHandleField = value;
                    this.RaisePropertyChanged("DeviceHandle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((this.DeviceIDField.Equals(value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaceOperationMode {
            get {
                return this.FaceOperationModeField;
            }
            set {
                if ((object.ReferenceEquals(this.FaceOperationModeField, value) != true)) {
                    this.FaceOperationModeField = value;
                    this.RaisePropertyChanged("FaceOperationMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FaceOperationModeCode {
            get {
                return this.FaceOperationModeCodeField;
            }
            set {
                if ((this.FaceOperationModeCodeField.Equals(value) != true)) {
                    this.FaceOperationModeCodeField = value;
                    this.RaisePropertyChanged("FaceOperationModeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacilityCode {
            get {
                return this.FacilityCodeField;
            }
            set {
                if ((this.FacilityCodeField.Equals(value) != true)) {
                    this.FacilityCodeField = value;
                    this.RaisePropertyChanged("FacilityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailCode {
            get {
                return this.FailCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailCodeField, value) != true)) {
                    this.FailCodeField = value;
                    this.RaisePropertyChanged("FailCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirmwareVersion {
            get {
                return this.FirmwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmwareVersionField, value) != true)) {
                    this.FirmwareVersionField = value;
                    this.RaisePropertyChanged("FirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gateway {
            get {
                return this.GatewayField;
            }
            set {
                if ((object.ReferenceEquals(this.GatewayField, value) != true)) {
                    this.GatewayField = value;
                    this.RaisePropertyChanged("Gateway");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KernelVersion {
            get {
                return this.KernelVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.KernelVersionField, value) != true)) {
                    this.KernelVersionField = value;
                    this.RaisePropertyChanged("KernelVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastSync {
            get {
                return this.LastSyncField;
            }
            set {
                if ((this.LastSyncField.Equals(value) != true)) {
                    this.LastSyncField = value;
                    this.RaisePropertyChanged("LastSync");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Online {
            get {
                return this.OnlineField;
            }
            set {
                if ((this.OnlineField.Equals(value) != true)) {
                    this.OnlineField = value;
                    this.RaisePropertyChanged("Online");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationMode {
            get {
                return this.OperationModeField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationModeField, value) != true)) {
                    this.OperationModeField = value;
                    this.RaisePropertyChanged("OperationMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OperationModeCode {
            get {
                return this.OperationModeCodeField;
            }
            set {
                if ((this.OperationModeCodeField.Equals(value) != true)) {
                    this.OperationModeCodeField = value;
                    this.RaisePropertyChanged("OperationModeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProfileCode {
            get {
                return this.ProfileCodeField;
            }
            set {
                if ((this.ProfileCodeField.Equals(value) != true)) {
                    this.ProfileCodeField = value;
                    this.RaisePropertyChanged("ProfileCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadStatus {
            get {
                return this.ReadStatusField;
            }
            set {
                if ((this.ReadStatusField.Equals(value) != true)) {
                    this.ReadStatusField = value;
                    this.RaisePropertyChanged("ReadStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerIPAddress {
            get {
                return this.ServerIPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerIPAddressField, value) != true)) {
                    this.ServerIPAddressField = value;
                    this.RaisePropertyChanged("ServerIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerPort {
            get {
                return this.ServerPortField;
            }
            set {
                if ((this.ServerPortField.Equals(value) != true)) {
                    this.ServerPortField = value;
                    this.RaisePropertyChanged("ServerPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subnet {
            get {
                return this.SubnetField;
            }
            set {
                if ((object.ReferenceEquals(this.SubnetField, value) != true)) {
                    this.SubnetField = value;
                    this.RaisePropertyChanged("Subnet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateType {
            get {
                return this.TemplateTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateTypeField, value) != true)) {
                    this.TemplateTypeField = value;
                    this.RaisePropertyChanged("TemplateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TemplateTypeCode {
            get {
                return this.TemplateTypeCodeField;
            }
            set {
                if ((this.TemplateTypeCodeField.Equals(value) != true)) {
                    this.TemplateTypeCodeField = value;
                    this.RaisePropertyChanged("TemplateTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TimeSync {
            get {
                return this.TimeSyncField;
            }
            set {
                if ((this.TimeSyncField.Equals(value) != true)) {
                    this.TimeSyncField = value;
                    this.RaisePropertyChanged("TimeSync");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((this.TimeZoneField.Equals(value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((this.TypeCodeField.Equals(value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateStatus {
            get {
                return this.UpdateStatusField;
            }
            set {
                if ((this.UpdateStatusField.Equals(value) != true)) {
                    this.UpdateStatusField = value;
                    this.RaisePropertyChanged("UpdateStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseServerMatching {
            get {
                return this.UseServerMatchingField;
            }
            set {
                if ((this.UseServerMatchingField.Equals(value) != true)) {
                    this.UseServerMatchingField = value;
                    this.RaisePropertyChanged("UseServerMatching");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseServerMode {
            get {
                return this.UseServerModeField;
            }
            set {
                if ((this.UseServerModeField.Equals(value) != true)) {
                    this.UseServerModeField = value;
                    this.RaisePropertyChanged("UseServerMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WiegandOutput {
            get {
                return this.WiegandOutputField;
            }
            set {
                if ((object.ReferenceEquals(this.WiegandOutputField, value) != true)) {
                    this.WiegandOutputField = value;
                    this.RaisePropertyChanged("WiegandOutput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WiegandOutputCode {
            get {
                return this.WiegandOutputCodeField;
            }
            set {
                if ((this.WiegandOutputCodeField.Equals(value) != true)) {
                    this.WiegandOutputCodeField = value;
                    this.RaisePropertyChanged("WiegandOutputCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WiegandPassthrough {
            get {
                return this.WiegandPassthroughField;
            }
            set {
                if ((this.WiegandPassthroughField.Equals(value) != true)) {
                    this.WiegandPassthroughField = value;
                    this.RaisePropertyChanged("WiegandPassthrough");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReadersDataObject.CardforFaceOperationModeEnum", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
        public enum CardforFaceOperationModeEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            None = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CardOnly = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CardAndFace = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CardAndPassword = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CardAndFaceOrPassword = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CardAndFaceAndPassword = 5,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReadersDataObject.OperationModeEnum", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
        public enum OperationModeEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NoChange = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CardPlusBiometric = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CardPlusBiometricAndBiometricOnly = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CardOnly = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CardPlusBiometricPlusPin = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CardPlusPin = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BiometricPlusPin = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            IDPlusPin = 7,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReadersDataObject.CardReadModeEnum", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
        public enum CardReadModeEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            User = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CSN = 1,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReadersDataObject.FaceOperationModeEnum", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
        public enum FaceOperationModeEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            None = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FaceOnly = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FaceAndPassword = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FuncKeyAndFace = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FuncKeyAndFaceAndPassword = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FaceAndFuncKey = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FaceAndPasswordAndFuncKey = 6,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReadersDataObject.CardFormatEnum", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
        public enum CardFormatEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Corp1000 = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Standard_26bit = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            _37bit_H10304 = 2,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReadersDataObject.ProfileEnum", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
        public enum ProfileEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Default = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Facebook = 0,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReadersDataObject.TemplateTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
        public enum TemplateTypeEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Suprema = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ANSI = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ISO = 2,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReadersDataObject.TypeEnum", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
        public enum TypeEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BioStation = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BioEntryPlus = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BioLiteNet = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DStation = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BioStationT2 = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FaceStation = 10,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BioEntryPlusW = 11,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BioMini = 9999,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BioLiteNetGen2 = 203,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BioStation2 = 208,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReadersDataObject.WiegandOutputEnum", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
        public enum WiegandOutputEnum : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            User = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Card = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadersBasicInfoDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusTimebandDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEnlineDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusAlarmDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEventDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.CardDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.CardDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.LocationDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.LocationDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceTemplateObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FaceTemplateObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FingerDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FingerDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TemplateObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TemplateObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.PropertyDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.PropertyDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersStubDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersStubDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersBasicInfoDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReaderDescriptionsDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.CardforFaceOperationModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.OperationModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.CardReadModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.FaceOperationModeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.CardFormatEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.ProfileEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.TemplateTypeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.TypeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersDataObject.WiegandOutputEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.FingerDataObject.FingerCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersAdminDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ActivityRecordsDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ActivityRecordsDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersStubDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.UsersStubDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ReadersCountsDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEnlineDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusTimebandDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusEventDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DigitusAlarmDataObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardforFaceOperationModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.OperationModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardReadModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.FaceOperationModeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardFormatEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.ProfileEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.TemplateTypeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.TypeEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.WiegandOutputEnum, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.FingerDataObject.FingerCode, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TransformedBitmap))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapCacheOption))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapCreateOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Rotation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ImageSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Transform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.GeneralTransform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Animatable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Freezable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DependencyObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Int32Rect))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DispatcherObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.IO.Stream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.MarshalByRefObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Net.Cache.RequestCachePolicy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.KeyValuePair<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.SecurityTokenDto))]
    public partial class ReadersBasicInfoDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ReaderDataObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReaderNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ReaderDataObject {
            get {
                return this.ReaderDataObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderDataObjectField, value) != true)) {
                    this.ReaderDataObjectField = value;
                    this.RaisePropertyChanged("ReaderDataObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReaderName {
            get {
                return this.ReaderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderNameField, value) != true)) {
                    this.ReaderNameField = value;
                    this.RaisePropertyChanged("ReaderName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReaderDescriptionsDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class ReaderDescriptionsDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardforFaceOperationModeEnum, string> CardFaceOperationModeDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.OperationModeEnum, string> CardOperationModeDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardReadModeEnum, string> CardReadModeDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.FaceOperationModeEnum, string> FaceOperationModeDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardFormatEnum, string> ReaderCardFormatDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.ProfileEnum, string> ReaderProfileDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.TemplateTypeEnum, string> ReaderTemplateTypeDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.TypeEnum, string> ReaderTypeDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.WiegandOutputEnum, string> WieganOutputDescriptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardforFaceOperationModeEnum, string> CardFaceOperationModeDescriptions {
            get {
                return this.CardFaceOperationModeDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardFaceOperationModeDescriptionsField, value) != true)) {
                    this.CardFaceOperationModeDescriptionsField = value;
                    this.RaisePropertyChanged("CardFaceOperationModeDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.OperationModeEnum, string> CardOperationModeDescriptions {
            get {
                return this.CardOperationModeDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardOperationModeDescriptionsField, value) != true)) {
                    this.CardOperationModeDescriptionsField = value;
                    this.RaisePropertyChanged("CardOperationModeDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardReadModeEnum, string> CardReadModeDescriptions {
            get {
                return this.CardReadModeDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardReadModeDescriptionsField, value) != true)) {
                    this.CardReadModeDescriptionsField = value;
                    this.RaisePropertyChanged("CardReadModeDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.FaceOperationModeEnum, string> FaceOperationModeDescriptions {
            get {
                return this.FaceOperationModeDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FaceOperationModeDescriptionsField, value) != true)) {
                    this.FaceOperationModeDescriptionsField = value;
                    this.RaisePropertyChanged("FaceOperationModeDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.CardFormatEnum, string> ReaderCardFormatDescriptions {
            get {
                return this.ReaderCardFormatDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderCardFormatDescriptionsField, value) != true)) {
                    this.ReaderCardFormatDescriptionsField = value;
                    this.RaisePropertyChanged("ReaderCardFormatDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.ProfileEnum, string> ReaderProfileDescriptions {
            get {
                return this.ReaderProfileDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderProfileDescriptionsField, value) != true)) {
                    this.ReaderProfileDescriptionsField = value;
                    this.RaisePropertyChanged("ReaderProfileDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.TemplateTypeEnum, string> ReaderTemplateTypeDescriptions {
            get {
                return this.ReaderTemplateTypeDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderTemplateTypeDescriptionsField, value) != true)) {
                    this.ReaderTemplateTypeDescriptionsField = value;
                    this.RaisePropertyChanged("ReaderTemplateTypeDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.TypeEnum, string> ReaderTypeDescriptions {
            get {
                return this.ReaderTypeDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderTypeDescriptionsField, value) != true)) {
                    this.ReaderTypeDescriptionsField = value;
                    this.RaisePropertyChanged("ReaderTypeDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.ReadersDataObject.WiegandOutputEnum, string> WieganOutputDescriptions {
            get {
                return this.WieganOutputDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WieganOutputDescriptionsField, value) != true)) {
                    this.WieganOutputDescriptionsField = value;
                    this.RaisePropertyChanged("WieganOutputDescriptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersAdminDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class UsersAdminDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevicePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdministratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeviceAdministratorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevicePassword {
            get {
                return this.DevicePasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.DevicePasswordField, value) != true)) {
                    this.DevicePasswordField = value;
                    this.RaisePropertyChanged("DevicePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdministrator {
            get {
                return this.IsAdministratorField;
            }
            set {
                if ((this.IsAdministratorField.Equals(value) != true)) {
                    this.IsAdministratorField = value;
                    this.RaisePropertyChanged("IsAdministrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeviceAdministrator {
            get {
                return this.IsDeviceAdministratorField;
            }
            set {
                if ((this.IsDeviceAdministratorField.Equals(value) != true)) {
                    this.IsDeviceAdministratorField = value;
                    this.RaisePropertyChanged("IsDeviceAdministrator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityRecordsDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class ActivityRecordsDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CardIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeviceEventTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LogTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReaderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReaderLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReaderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SystemEventTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CardId {
            get {
                return this.CardIdField;
            }
            set {
                if ((this.CardIdField.Equals(value) != true)) {
                    this.CardIdField = value;
                    this.RaisePropertyChanged("CardId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeviceEventTime {
            get {
                return this.DeviceEventTimeField;
            }
            set {
                if ((this.DeviceEventTimeField.Equals(value) != true)) {
                    this.DeviceEventTimeField = value;
                    this.RaisePropertyChanged("DeviceEventTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((this.DeviceIdField.Equals(value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LogTypeId {
            get {
                return this.LogTypeIdField;
            }
            set {
                if ((this.LogTypeIdField.Equals(value) != true)) {
                    this.LogTypeIdField = value;
                    this.RaisePropertyChanged("LogTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReaderId {
            get {
                return this.ReaderIdField;
            }
            set {
                if ((this.ReaderIdField.Equals(value) != true)) {
                    this.ReaderIdField = value;
                    this.RaisePropertyChanged("ReaderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReaderLocation {
            get {
                return this.ReaderLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderLocationField, value) != true)) {
                    this.ReaderLocationField = value;
                    this.RaisePropertyChanged("ReaderLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReaderName {
            get {
                return this.ReaderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderNameField, value) != true)) {
                    this.ReaderNameField = value;
                    this.RaisePropertyChanged("ReaderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SystemEventTime {
            get {
                return this.SystemEventTimeField;
            }
            set {
                if ((this.SystemEventTimeField.Equals(value) != true)) {
                    this.SystemEventTimeField = value;
                    this.RaisePropertyChanged("SystemEventTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersStubDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class UsersStubDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FingersCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardsCount {
            get {
                return this.CardsCountField;
            }
            set {
                if ((this.CardsCountField.Equals(value) != true)) {
                    this.CardsCountField = value;
                    this.RaisePropertyChanged("CardsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacesCount {
            get {
                return this.FacesCountField;
            }
            set {
                if ((this.FacesCountField.Equals(value) != true)) {
                    this.FacesCountField = value;
                    this.RaisePropertyChanged("FacesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FingersCount {
            get {
                return this.FingersCountField;
            }
            set {
                if ((this.FingersCountField.Equals(value) != true)) {
                    this.FingersCountField = value;
                    this.RaisePropertyChanged("FingersCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadersCountsDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class ReadersCountsDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Online {
            get {
                return this.OnlineField;
            }
            set {
                if ((this.OnlineField.Equals(value) != true)) {
                    this.OnlineField = value;
                    this.RaisePropertyChanged("Online");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitusConnectionInfoDataObject", Namespace="http://schemas.datacontract.org/2004/07/BioConnect.DataObjects")]
    [System.SerializableAttribute()]
    public partial class DigitusConnectionInfoDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerIPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pin {
            get {
                return this.PinField;
            }
            set {
                if ((object.ReferenceEquals(this.PinField, value) != true)) {
                    this.PinField = value;
                    this.RaisePropertyChanged("Pin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Port {
            get {
                return this.PortField;
            }
            set {
                if ((object.ReferenceEquals(this.PortField, value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerIP {
            get {
                return this.ServerIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerIPField, value) != true)) {
                    this.ServerIPField = value;
                    this.RaisePropertyChanged("ServerIP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BitmapSource", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Media.Imaging")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TransformedBitmap))]
    public partial class BitmapSource : VV.Proxy.BioConnectAPI.ImageSource {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BitmapCacheOption", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Media.Imaging")]
    public enum BitmapCacheOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnDemand = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnLoad = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="BitmapCreateOptions", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Media.Imaging")]
    public enum BitmapCreateOptions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreservePixelFormat = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DelayCreation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IgnoreColorProfile = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IgnoreImageCache = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rotation", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Media.Imaging")]
    public enum Rotation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rotate0 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rotate90 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rotate180 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rotate270 = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageSource", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Media")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TransformedBitmap))]
    public partial class ImageSource : VV.Proxy.BioConnectAPI.Animatable {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transform", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Media")]
    [System.SerializableAttribute()]
    public partial class Transform : VV.Proxy.BioConnectAPI.GeneralTransform {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralTransform", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Media")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Transform))]
    public partial class GeneralTransform : VV.Proxy.BioConnectAPI.Animatable {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Animatable", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Media.Animation")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.GeneralTransform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Transform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ImageSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TransformedBitmap))]
    public partial class Animatable : VV.Proxy.BioConnectAPI.Freezable {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Freezable", Namespace="http://schemas.datacontract.org/2004/07/System.Windows")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Animatable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.GeneralTransform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Transform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ImageSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TransformedBitmap))]
    public partial class Freezable : VV.Proxy.BioConnectAPI.DependencyObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DependencyObject", Namespace="http://schemas.datacontract.org/2004/07/System.Windows")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Freezable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Animatable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.GeneralTransform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Transform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ImageSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TransformedBitmap))]
    public partial class DependencyObject : VV.Proxy.BioConnectAPI.DispatcherObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Int32Rect", Namespace="http://schemas.datacontract.org/2004/07/System.Windows")]
    [System.SerializableAttribute()]
    public partial struct Int32Rect : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int _heightField;
        
        private int _widthField;
        
        private int _xField;
        
        private int _yField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _height {
            get {
                return this._heightField;
            }
            set {
                if ((this._heightField.Equals(value) != true)) {
                    this._heightField = value;
                    this.RaisePropertyChanged("_height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _width {
            get {
                return this._widthField;
            }
            set {
                if ((this._widthField.Equals(value) != true)) {
                    this._widthField = value;
                    this.RaisePropertyChanged("_width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _x {
            get {
                return this._xField;
            }
            set {
                if ((this._xField.Equals(value) != true)) {
                    this._xField = value;
                    this.RaisePropertyChanged("_x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _y {
            get {
                return this._yField;
            }
            set {
                if ((this._yField.Equals(value) != true)) {
                    this._yField = value;
                    this.RaisePropertyChanged("_y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispatcherObject", Namespace="http://schemas.datacontract.org/2004/07/System.Windows.Threading")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.DependencyObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Freezable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Animatable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.GeneralTransform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.Transform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.ImageSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.BitmapImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VV.Proxy.BioConnectAPI.TransformedBitmap))]
    public partial class DispatcherObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityTokenDto", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Dto")]
    [System.SerializableAttribute()]
    public partial class SecurityTokenDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUsedIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUsedIP {
            get {
                return this.LastUsedIPField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUsedIPField, value) != true)) {
                    this.LastUsedIPField = value;
                    this.RaisePropertyChanged("LastUsedIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Level {
            get {
                return this.LevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelField, value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateField, value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.BioConnect.com", ConfigurationName="BioConnectAPI.IBioConnectAPI")]
    public interface IBioConnectAPI {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/ReconnectDigitusService", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/ReconnectDigitusServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/ReconnectDigitusServiceBioConnectExcepti" +
            "onFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void ReconnectDigitusService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/ReconnectDigitusService", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/ReconnectDigitusServiceResponse")]
        System.Threading.Tasks.Task ReconnectDigitusServiceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DigitusLockUnlockSystem", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DigitusLockUnlockSystemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/DigitusLockUnlockSystemBioConnectExcepti" +
            "onFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void DigitusLockUnlockSystem(bool value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DigitusLockUnlockSystem", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DigitusLockUnlockSystemResponse")]
        System.Threading.Tasks.Task DigitusLockUnlockSystemAsync(bool value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DigitusLockDevice", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DigitusLockDeviceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/DigitusLockDeviceBioConnectExceptionFaul" +
            "t", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void DigitusLockDevice(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DigitusLockDevice", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DigitusLockDeviceResponse")]
        System.Threading.Tasks.Task DigitusLockDeviceAsync(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DigitusUnlockDevice", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DigitusUnlockDeviceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/DigitusUnlockDeviceBioConnectExceptionFa" +
            "ult", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void DigitusUnlockDevice(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DigitusUnlockDevice", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DigitusUnlockDeviceResponse")]
        System.Threading.Tasks.Task DigitusUnlockDeviceAsync(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/BeginUserSearch", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/BeginUserSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/BeginUserSearchBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void BeginUserSearch(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/BeginUserSearch", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/BeginUserSearchResponse")]
        System.Threading.Tasks.Task BeginUserSearchAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/ReadCard", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/ReadCardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/ReadCardBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string ReadCard(int deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/ReadCard", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/ReadCardResponse")]
        System.Threading.Tasks.Task<string> ReadCardAsync(int deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AuditLogSynchronize", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AuditLogSynchronizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/AuditLogSynchronizeBioConnectExceptionFa" +
            "ult", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void AuditLogSynchronize(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AuditLogSynchronize", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AuditLogSynchronizeResponse")]
        System.Threading.Tasks.Task AuditLogSynchronizeAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/LogOut", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/LogOutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/LogOutBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string LogOut(string clientRegistration, string location, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/LogOut", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/LogOutResponse")]
        System.Threading.Tasks.Task<string> LogOutAsync(string clientRegistration, string location, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/ResetAcm", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/ResetAcmResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/ResetAcmBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        bool ResetAcm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/ResetAcm", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/ResetAcmResponse")]
        System.Threading.Tasks.Task<bool> ResetAcmAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceGroup", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceGroupBioConnectExcept" +
            "ionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void UpdateDigitusDeviceGroup(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject dataObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceGroup", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceGroupResponse")]
        System.Threading.Tasks.Task UpdateDigitusDeviceGroupAsync(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject dataObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AddDigitusDeviceGroup", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AddDigitusDeviceGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/AddDigitusDeviceGroupBioConnectException" +
            "Fault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void AddDigitusDeviceGroup(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject dataObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AddDigitusDeviceGroup", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AddDigitusDeviceGroupResponse")]
        System.Threading.Tasks.Task AddDigitusDeviceGroupAsync(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject dataObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DigitusStatus", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DigitusStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/DigitusStatusBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        bool DigitusStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DigitusStatus", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DigitusStatusResponse")]
        System.Threading.Tasks.Task<bool> DigitusStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessSchdule", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessSchduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessSchduleBioConnectExcepti" +
            "onFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject GetDigitusAccessSchdule(string devicescheduleguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessSchdule", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessSchduleResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject> GetDigitusAccessSchduleAsync(string devicescheduleguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusTimeband", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusTimebandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusTimebandBioConnectExceptionFau" +
            "lt", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusTimebandDataObject GetDigitusTimeband(int timebandid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusTimeband", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusTimebandResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusTimebandDataObject> GetDigitusTimebandAsync(int timebandid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDevice", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceBioConnectExceptionFault" +
            "", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusDeviceDataObject GetDigitusDevice(string deviceguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDevice", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceDataObject> GetDigitusDeviceAsync(string deviceguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusEnline", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusEnlineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusEnlineBioConnectExceptionFault" +
            "", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusEnlineDataObject GetDigitusEnline(string enlineguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusEnline", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusEnlineResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusEnlineDataObject> GetDigitusEnlineAsync(string enlineguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceGroup", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceGroupBioConnectException" +
            "Fault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject GetDigitusDeviceGroup(string devicegroupguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceGroup", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceGroupResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject> GetDigitusDeviceGroupAsync(string devicegroupguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusController", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusControllerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusControllerBioConnectExceptionF" +
            "ault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusControllerDataObject GetDigitusController(string controllerguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusController", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusControllerResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusControllerDataObject> GetDigitusControllerAsync(string controllerguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusControllerNode", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusControllerNodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusControllerNodeBioConnectExcept" +
            "ionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject GetDigitusControllerNode(string controllerguid, int nodeserialnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusControllerNode", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusControllerNodeResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject> GetDigitusControllerNodeAsync(string controllerguid, int nodeserialnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAlarm", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAlarmResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAlarmBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusAlarmDataObject GetDigitusAlarm(string alarmguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAlarm", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAlarmResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusAlarmDataObject> GetDigitusAlarmAsync(string alarmguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusEvent", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusEventBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusEventDataObject GetDigitusEvent(string eventguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusEvent", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusEventResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusEventDataObject> GetDigitusEventAsync(string eventguid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAvailableUserPins", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAvailableUserPinsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAvailableUserPinsBioConnectExc" +
            "eptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string[] GetDigitusAvailableUserPins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAvailableUserPins", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAvailableUserPinsResponse")]
        System.Threading.Tasks.Task<string[]> GetDigitusAvailableUserPinsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/FindUser", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/FindUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/FindUserBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.UsersDataObject[] FindUser(string fragment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/FindUser", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/FindUserResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.UsersDataObject[]> FindUserAsync(string fragment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserByID", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetUserByIDBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.UsersDataObject GetUserByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserByID", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserByIDResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.UsersDataObject> GetUserByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReaderIDs", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReaderIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetReaderIDsBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.ReadersStubDataObject[] GetReaderIDs(string filterStr, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReaderIDs", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReaderIDsResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReadersStubDataObject[]> GetReaderIDsAsync(string filterStr, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReaderDetailsByID", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReaderDetailsByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetReaderDetailsByIDBioConnectExceptionF" +
            "ault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.ReadersDataObject GetReaderDetailsByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReaderDetailsByID", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReaderDetailsByIDResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReadersDataObject> GetReaderDetailsByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReaders", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReadersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetReadersBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.ReadersDataObject[] GetReaders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReaders", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReadersResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReadersDataObject[]> GetReadersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReadersBasicInfo", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReadersBasicInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetReadersBasicInfoBioConnectExceptionFa" +
            "ult", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.ReadersBasicInfoDataObject[] GetReadersBasicInfo(string filterStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReadersBasicInfo", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReadersBasicInfoResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReadersBasicInfoDataObject[]> GetReadersBasicInfoAsync(string filterStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveReader", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveReaderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SaveReaderBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void SaveReader(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveReader", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveReaderResponse")]
        System.Threading.Tasks.Task SaveReaderAsync(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/ScanUserFaceData", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/ScanUserFaceDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/ScanUserFaceDataBioConnectExceptionFault" +
            "", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void ScanUserFaceData(uint deviceid, int userid, int index, VV.Proxy.BioConnectAPI.SecurityTokenDto token, string[] selectedLocations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/ScanUserFaceData", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/ScanUserFaceDataResponse")]
        System.Threading.Tasks.Task ScanUserFaceDataAsync(uint deviceid, int userid, int index, VV.Proxy.BioConnectAPI.SecurityTokenDto token, string[] selectedLocations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateReaderConfig", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateReaderConfigResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateReaderConfigBioConnectExceptionFau" +
            "lt", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void UpdateReaderConfig(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, bool bReset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateReaderConfig", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateReaderConfigResponse")]
        System.Threading.Tasks.Task UpdateReaderConfigAsync(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, bool bReset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveScannedTemplate", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveScannedTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SaveScannedTemplateBioConnectExceptionFa" +
            "ult", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        int SaveScannedTemplate(VV.Proxy.BioConnectAPI.TemplateObject scannedTemplate, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveScannedTemplate", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveScannedTemplateResponse")]
        System.Threading.Tasks.Task<int> SaveScannedTemplateAsync(VV.Proxy.BioConnectAPI.TemplateObject scannedTemplate, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveDigitusTemplates", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveDigitusTemplatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SaveDigitusTemplatesBioConnectExceptionF" +
            "ault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void SaveDigitusTemplates(VV.Proxy.BioConnectAPI.TemplateObject[] scannedTemplates, string Name, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveDigitusTemplates", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveDigitusTemplatesResponse")]
        System.Threading.Tasks.Task SaveDigitusTemplatesAsync(VV.Proxy.BioConnectAPI.TemplateObject[] scannedTemplates, string Name, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GertReaderDescriptions", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GertReaderDescriptionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GertReaderDescriptionsBioConnectExceptio" +
            "nFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.ReaderDescriptionsDataObject GertReaderDescriptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GertReaderDescriptions", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GertReaderDescriptionsResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReaderDescriptionsDataObject> GertReaderDescriptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetFingerDescriptions", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetFingerDescriptionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetFingerDescriptionsBioConnectException" +
            "Fault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.FingerDataObject.FingerCode, string> GetFingerDescriptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetFingerDescriptions", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetFingerDescriptionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.FingerDataObject.FingerCode, string>> GetFingerDescriptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetTemplateObject", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetTemplateObjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetTemplateObjectBioConnectExceptionFaul" +
            "t", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.TemplateObject GetTemplateObject(long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto token, int quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetTemplateObject", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetTemplateObjectResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.TemplateObject> GetTemplateObjectAsync(long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto token, int quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DeleteTemplate", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DeleteTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/DeleteTemplateBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void DeleteTemplate(int templateID, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DeleteTemplate", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DeleteTemplateResponse")]
        System.Threading.Tasks.Task DeleteTemplateAsync(int templateID, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveUserAdmin", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveUserAdminResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SaveUserAdminBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void SaveUserAdmin(VV.Proxy.BioConnectAPI.UsersAdminDataObject usersDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveUserAdmin", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveUserAdminResponse")]
        System.Threading.Tasks.Task SaveUserAdminAsync(VV.Proxy.BioConnectAPI.UsersAdminDataObject usersDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityToken", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenBioConnectException" +
            "Fault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.SecurityTokenDto RetrieveSecurityToken(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityToken", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.SecurityTokenDto> RetrieveSecurityTokenAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AuthroizeUserLogin", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AuthroizeUserLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/AuthroizeUserLoginBioConnectExceptionFau" +
            "lt", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string AuthroizeUserLogin(string username, string password, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AuthroizeUserLogin", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AuthroizeUserLoginResponse")]
        System.Threading.Tasks.Task<string> AuthroizeUserLoginAsync(string username, string password, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AuthenticateUser", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AuthenticateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/AuthenticateUserBioConnectExceptionFault" +
            "", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        bool AuthenticateUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AuthenticateUser", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<bool> AuthenticateUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveLocations", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RetrieveLocationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveLocationsBioConnectExceptionFaul" +
            "t", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string RetrieveLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveLocations", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RetrieveLocationsResponse")]
        System.Threading.Tasks.Task<string> RetrieveLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/FindUserInLocation", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/FindUserInLocationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/FindUserInLocationBioConnectExceptionFau" +
            "lt", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.UsersDataObject[] FindUserInLocation(string fragment, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/FindUserInLocation", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/FindUserInLocationResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.UsersDataObject[]> FindUserInLocationAsync(string fragment, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AcmType", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AcmTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/AcmTypeBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string AcmType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AcmType", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AcmTypeResponse")]
        System.Threading.Tasks.Task<string> AcmTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/Synchronize", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SynchronizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SynchronizeBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void Synchronize(System.DateTime dateToSyncFrom, string username, string LastUsedIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/Synchronize", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SynchronizeResponse")]
        System.Threading.Tasks.Task SynchronizeAsync(System.DateTime dateToSyncFrom, string username, string LastUsedIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SynchronizeAllReaders", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SynchronizeAllReadersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SynchronizeAllReadersBioConnectException" +
            "Fault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void SynchronizeAllReaders(string username, string LastusedIP, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SynchronizeAllReaders", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SynchronizeAllReadersResponse")]
        System.Threading.Tasks.Task SynchronizeAllReadersAsync(string username, string LastusedIP, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/ServerVersion", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/ServerVersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/ServerVersionBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string ServerVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/ServerVersion", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/ServerVersionResponse")]
        System.Threading.Tasks.Task<string> ServerVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenByUsername", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenByUsernameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenByUsernameBioConnec" +
            "tExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.SecurityTokenDto RetrieveSecurityTokenByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenByUsername", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenByUsernameResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.SecurityTokenDto> RetrieveSecurityTokenByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenById", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenByIdBioConnectExcep" +
            "tionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.SecurityTokenDto RetrieveSecurityTokenById(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenById", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RetrieveSecurityTokenByIdResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.SecurityTokenDto> RetrieveSecurityTokenByIdAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveSecurityToken", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveSecurityTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SaveSecurityTokenBioConnectExceptionFaul" +
            "t", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void SaveSecurityToken(VV.Proxy.BioConnectAPI.SecurityTokenDto tokenToSave, VV.Proxy.BioConnectAPI.SecurityTokenDto requestedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveSecurityToken", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveSecurityTokenResponse")]
        System.Threading.Tasks.Task SaveSecurityTokenAsync(VV.Proxy.BioConnectAPI.SecurityTokenDto tokenToSave, VV.Proxy.BioConnectAPI.SecurityTokenDto requestedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLatestActivityRecords", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLatestActivityRecordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetLatestActivityRecordsBioConnectExcept" +
            "ionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.ActivityRecordsDataObject[] GetLatestActivityRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLatestActivityRecords", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLatestActivityRecordsResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ActivityRecordsDataObject[]> GetLatestActivityRecordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserIdList", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserIdListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetUserIdListBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.UsersStubDataObject[] GetUserIdList(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserIdList", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserIdListResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.UsersStubDataObject[]> GetUserIdListAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/FilterUsersByCard", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/FilterUsersByCardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/FilterUsersByCardBioConnectExceptionFaul" +
            "t", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        int[] FilterUsersByCard(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/FilterUsersByCard", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/FilterUsersByCardResponse")]
        System.Threading.Tasks.Task<int[]> FilterUsersByCardAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/RestartReader", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RestartReaderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/RestartReaderBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void RestartReader(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/RestartReader", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RestartReaderResponse")]
        System.Threading.Tasks.Task RestartReaderAsync(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateFirmware", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateFirmwareResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateFirmwareBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string UpdateFirmware(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, byte[] firmwareFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateFirmware", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateFirmwareResponse")]
        System.Threading.Tasks.Task<string> UpdateFirmwareAsync(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, byte[] firmwareFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AuthenticateADUser", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AuthenticateADUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/AuthenticateADUserBioConnectExceptionFau" +
            "lt", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string AuthenticateADUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AuthenticateADUser", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AuthenticateADUserResponse")]
        System.Threading.Tasks.Task<string> AuthenticateADUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReadersCounts", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReadersCountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetReadersCountsBioConnectExceptionFault" +
            "", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.ReadersCountsDataObject GetReadersCounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReadersCounts", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReadersCountsResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReadersCountsDataObject> GetReadersCountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DeleteReader", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DeleteReaderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/DeleteReaderBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void DeleteReader(int readerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DeleteReader", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DeleteReaderResponse")]
        System.Threading.Tasks.Task DeleteReaderAsync(int readerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserBadgeNumbers", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserBadgeNumbersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetUserBadgeNumbersBioConnectExceptionFa" +
            "ult", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string[] GetUserBadgeNumbers(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserBadgeNumbers", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserBadgeNumbersResponse")]
        System.Threading.Tasks.Task<string[]> GetUserBadgeNumbersAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateCardsSettings", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateCardsSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateCardsSettingsBioConnectExceptionFa" +
            "ult", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void UpdateCardsSettings(VV.Proxy.BioConnectAPI.CardDataObject[] cards);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateCardsSettings", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateCardsSettingsResponse")]
        System.Threading.Tasks.Task UpdateCardsSettingsAsync(VV.Proxy.BioConnectAPI.CardDataObject[] cards);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SiteCode", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SiteCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SiteCodeBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string SiteCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SiteCode", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SiteCodeResponse")]
        System.Threading.Tasks.Task<string> SiteCodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SiteKey", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SiteKeyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SiteKeyBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string SiteKey([System.ServiceModel.MessageParameterAttribute(Name="siteKey")] string siteKey1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SiteKey", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SiteKeyResponse")]
        System.Threading.Tasks.Task<string> SiteKeyAsync(string siteKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/Restrictions", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RestrictionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/RestrictionsBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        System.Collections.Generic.Dictionary<string, string> Restrictions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/Restrictions", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/RestrictionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> RestrictionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLicensePath", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLicensePathResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetLicensePathBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string GetLicensePath();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLicensePath", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLicensePathResponse")]
        System.Threading.Tasks.Task<string> GetLicensePathAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/FormatCard", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/FormatCardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/FormatCardBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string FormatCard(long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/FormatCard", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/FormatCardResponse")]
        System.Threading.Tasks.Task<string> FormatCardAsync(long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/isServerLoaded", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/isServerLoadedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/isServerLoadedBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        bool isServerLoaded();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/isServerLoaded", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/isServerLoadedResponse")]
        System.Threading.Tasks.Task<bool> isServerLoadedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/WriteToCard", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/WriteToCardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/WriteToCardBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string WriteToCard(long readerID, int userID, int primaryTemplateId, int secondaryTemplateId, VV.Proxy.BioConnectAPI.SecurityTokenDto Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/WriteToCard", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/WriteToCardResponse")]
        System.Threading.Tasks.Task<string> WriteToCardAsync(long readerID, int userID, int primaryTemplateId, int secondaryTemplateId, VV.Proxy.BioConnectAPI.SecurityTokenDto Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserIdByBadgeNumber", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserIdByBadgeNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetUserIdByBadgeNumberBioConnectExceptio" +
            "nFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        int GetUserIdByBadgeNumber(long badgeNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserIdByBadgeNumber", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserIdByBadgeNumberResponse")]
        System.Threading.Tasks.Task<int> GetUserIdByBadgeNumberAsync(long badgeNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLicenseExpiry", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLicenseExpiryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetLicenseExpiryBioConnectExceptionFault" +
            "", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        System.DateTime GetLicenseExpiry();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLicenseExpiry", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLicenseExpiryResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetLicenseExpiryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLicenseActive", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLicenseActiveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetLicenseActiveBioConnectExceptionFault" +
            "", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        bool GetLicenseActive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLicenseActive", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLicenseActiveResponse")]
        System.Threading.Tasks.Task<bool> GetLicenseActiveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveAppSettings", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveAppSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SaveAppSettingsBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void SaveAppSettings(System.Collections.Generic.Dictionary<string, string> dictSettings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveAppSettings", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveAppSettingsResponse")]
        System.Threading.Tasks.Task SaveAppSettingsAsync(System.Collections.Generic.Dictionary<string, string> dictSettings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetAppSettings", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetAppSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetAppSettingsBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        System.Collections.Generic.Dictionary<string, object> GetAppSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetAppSettings", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetAppSettingsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>> GetAppSettingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DatabaseImport", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DatabaseImportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/DatabaseImportBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void DatabaseImport(string connectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DatabaseImport", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DatabaseImportResponse")]
        System.Threading.Tasks.Task DatabaseImportAsync(string connectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserImage", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetUserImageBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        byte[] GetUserImage(int userid, int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserImage", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserImageResponse")]
        System.Threading.Tasks.Task<byte[]> GetUserImageAsync(int userid, int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateReaderTime", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateReaderTimeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateReaderTimeBioConnectExceptionFault" +
            "", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void UpdateReaderTime(System.DateTime devtime, long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateReaderTime", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateReaderTimeResponse")]
        System.Threading.Tasks.Task UpdateReaderTimeAsync(System.DateTime devtime, long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReaderTime", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReaderTimeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetReaderTimeBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        System.DateTime GetReaderTime(System.DateTime devtime, long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetReaderTime", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetReaderTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetReaderTimeAsync(System.DateTime devtime, long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveUserFaceLocations", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveUserFaceLocationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SaveUserFaceLocationsBioConnectException" +
            "Fault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void SaveUserFaceLocations(int userid, string[] selectedLocations, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveUserFaceLocations", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveUserFaceLocationsResponse")]
        System.Threading.Tasks.Task SaveUserFaceLocationsAsync(int userid, string[] selectedLocations, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GenerateHealthCheck", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GenerateHealthCheckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GenerateHealthCheckBioConnectExceptionFa" +
            "ult", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void GenerateHealthCheck(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GenerateHealthCheck", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GenerateHealthCheckResponse")]
        System.Threading.Tasks.Task GenerateHealthCheckAsync(System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SynchronizeUserLocations", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SynchronizeUserLocationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SynchronizeUserLocationsBioConnectExcept" +
            "ionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void SynchronizeUserLocations(int userId, string[] selectedLocations, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SynchronizeUserLocations", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SynchronizeUserLocationsResponse")]
        System.Threading.Tasks.Task SynchronizeUserLocationsAsync(int userId, string[] selectedLocations, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserListByIds", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserListByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetUserListByIdsBioConnectExceptionFault" +
            "", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.UsersStubDataObject[] GetUserListByIds(int[] changes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserListByIds", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserListByIdsResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.UsersStubDataObject[]> GetUserListByIdsAsync(int[] changes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusConnectionsList", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusConnectionsListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusConnectionsListBioConnectExcep" +
            "tionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject[] GetDigitusConnectionsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusConnectionsList", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusConnectionsListResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject[]> GetDigitusConnectionsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceGroupList", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceGroupListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceGroupListBioConnectExcep" +
            "tionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject[] GetDigitusDeviceGroupList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceGroupList", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusDeviceGroupListResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject[]> GetDigitusDeviceGroupListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllers", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllersBioConnectExcept" +
            "ionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusControllerDataObject[] GetDigitusBusControllers(string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllers", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllersResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusControllerDataObject[]> GetDigitusBusControllersAsync(string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusSentryControllers", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusSentryControllersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusSentryControllersBioConnectExc" +
            "eptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusControllerDataObject[] GetDigitusSentryControllers(string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusSentryControllers", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusSentryControllersResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusControllerDataObject[]> GetDigitusSentryControllersAsync(string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerNodes", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerNodesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerNodesBioConnectEx" +
            "ceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject[] GetDigitusBusControllerNodes(string controllerId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerNodes", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerNodesResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject[]> GetDigitusBusControllerNodesAsync(string controllerId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerEnlines", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerEnlinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerEnlinesBioConnect" +
            "ExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusEnlineDataObject[] GetDigitusBusControllerEnlines(string controllerId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerEnlines", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerEnlinesResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusEnlineDataObject[]> GetDigitusBusControllerEnlinesAsync(string controllerId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerNodeDevices", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerNodeDevicesRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerNodeDevicesBioCon" +
            "nectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[] GetDigitusBusControllerNodeDevices(string controllerId, int nodeSerialNumber, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerNodeDevices", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusBusControllerNodeDevicesRespon" +
            "se")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[]> GetDigitusBusControllerNodeDevicesAsync(string controllerId, int nodeSerialNumber, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusSentryControllerDevices", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusSentryControllerDevicesRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusSentryControllerDevicesBioConn" +
            "ectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[] GetDigitusSentryControllerDevices(string controllerId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusSentryControllerDevices", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusSentryControllerDevicesRespons" +
            "e")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[]> GetDigitusSentryControllerDevicesAsync(string controllerId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetAllDigitusDevices", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetAllDigitusDevicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetAllDigitusDevicesBioConnectExceptionF" +
            "ault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[] GetAllDigitusDevices(string controllerId, int nodeSerialNumber, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetAllDigitusDevices", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetAllDigitusDevicesResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[]> GetAllDigitusDevicesAsync(string controllerId, int nodeSerialNumber, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusTimeBands", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusTimeBandsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusTimeBandsBioConnectExceptionFa" +
            "ult", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusTimebandDataObject[] GetDigitusTimeBands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusTimeBands", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusTimeBandsResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusTimebandDataObject[]> GetDigitusTimeBandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessScheduleList", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessScheduleListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessScheduleListBioConnectEx" +
            "ceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[] GetDigitusAccessScheduleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessScheduleList", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessScheduleListResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[]> GetDigitusAccessScheduleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessSchedulesOnly", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessSchedulesOnlyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessSchedulesOnlyBioConnectE" +
            "xceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[] GetDigitusAccessSchedulesOnly();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessSchedulesOnly", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetDigitusAccessSchedulesOnlyResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[]> GetDigitusAccessSchedulesOnlyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLatestDigitusEvents", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLatestDigitusEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetLatestDigitusEventsBioConnectExceptio" +
            "nFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusEventDataObject[] GetLatestDigitusEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLatestDigitusEvents", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLatestDigitusEventsResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusEventDataObject[]> GetLatestDigitusEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLatestDigitusAlarms", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLatestDigitusAlarmsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetLatestDigitusAlarmsBioConnectExceptio" +
            "nFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusAlarmDataObject[] GetLatestDigitusAlarms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetLatestDigitusAlarms", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetLatestDigitusAlarmsResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusAlarmDataObject[]> GetLatestDigitusAlarmsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AcknowledgeDigitusAlarm", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AcknowledgeDigitusAlarmResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/AcknowledgeDigitusAlarmBioConnectExcepti" +
            "onFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        VV.Proxy.BioConnectAPI.DigitusAlarmDataObject AcknowledgeDigitusAlarm(string alarmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/AcknowledgeDigitusAlarm", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/AcknowledgeDigitusAlarmResponse")]
        System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusAlarmDataObject> AcknowledgeDigitusAlarmAsync(string alarmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveDigitusConnectionInfo", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveDigitusConnectionInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SaveDigitusConnectionInfoBioConnectExcep" +
            "tionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        int SaveDigitusConnectionInfo(VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject dataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveDigitusConnectionInfo", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveDigitusConnectionInfoResponse")]
        System.Threading.Tasks.Task<int> SaveDigitusConnectionInfoAsync(VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject dataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DeleteDigitusConnectionInfo", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DeleteDigitusConnectionInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/DeleteDigitusConnectionInfoBioConnectExc" +
            "eptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void DeleteDigitusConnectionInfo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DeleteDigitusConnectionInfo", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DeleteDigitusConnectionInfoResponse")]
        System.Threading.Tasks.Task DeleteDigitusConnectionInfoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DeleteFaceEnrollment", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DeleteFaceEnrollmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/DeleteFaceEnrollmentBioConnectExceptionF" +
            "ault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void DeleteFaceEnrollment(int usersDataObjectId, int selectedEnrollmentTypeInd, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/DeleteFaceEnrollment", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/DeleteFaceEnrollmentResponse")]
        System.Threading.Tasks.Task DeleteFaceEnrollmentAsync(int usersDataObjectId, int selectedEnrollmentTypeInd, VV.Proxy.BioConnectAPI.SecurityTokenDto token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/CheckUsername", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/CheckUsernameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/CheckUsernameBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        bool CheckUsername(string username, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/CheckUsername", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/CheckUsernameResponse")]
        System.Threading.Tasks.Task<bool> CheckUsernameAsync(string username, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDevice", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceBioConnectExceptionFa" +
            "ult", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void UpdateDigitusDevice(VV.Proxy.BioConnectAPI.DigitusDeviceDataObject digitusDeviceDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDevice", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceResponse")]
        System.Threading.Tasks.Task UpdateDigitusDeviceAsync(VV.Proxy.BioConnectAPI.DigitusDeviceDataObject digitusDeviceDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusEnline", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusEnlineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusEnlineBioConnectExceptionFa" +
            "ult", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void UpdateDigitusEnline(VV.Proxy.BioConnectAPI.DigitusEnlineDataObject digitusEnlineDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusEnline", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusEnlineResponse")]
        System.Threading.Tasks.Task UpdateDigitusEnlineAsync(VV.Proxy.BioConnectAPI.DigitusEnlineDataObject digitusEnlineDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusController", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusControllerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusControllerBioConnectExcepti" +
            "onFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void UpdateDigitusController(VV.Proxy.BioConnectAPI.DigitusControllerDataObject digitusControllerDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusController", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusControllerResponse")]
        System.Threading.Tasks.Task UpdateDigitusControllerAsync(VV.Proxy.BioConnectAPI.DigitusControllerDataObject digitusControllerDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusControllerNode", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusControllerNodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusControllerNodeBioConnectExc" +
            "eptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void UpdateDigitusControllerNode(VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject digitusControllerNodeDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusControllerNode", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusControllerNodeResponse")]
        System.Threading.Tasks.Task UpdateDigitusControllerNodeAsync(VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject digitusControllerNodeDataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusTimeband", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusTimebandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusTimebandBioConnectException" +
            "Fault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void UpdateDigitusTimeband(VV.Proxy.BioConnectAPI.DigitusTimebandDataObject dataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusTimeband", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusTimebandResponse")]
        System.Threading.Tasks.Task UpdateDigitusTimebandAsync(VV.Proxy.BioConnectAPI.DigitusTimebandDataObject dataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceScheduleGroup", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceScheduleGroupResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceScheduleGroupBioConne" +
            "ctExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void UpdateDigitusDeviceScheduleGroup(VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject dataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceScheduleGroup", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/UpdateDigitusDeviceScheduleGroupResponse" +
            "")]
        System.Threading.Tasks.Task UpdateDigitusDeviceScheduleGroupAsync(VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject dataObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveUserProperties", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveUserPropertiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/SaveUserPropertiesBioConnectExceptionFau" +
            "lt", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        void SaveUserProperties(int userId, VV.Proxy.BioConnectAPI.PropertyDataObject[] properties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/SaveUserProperties", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/SaveUserPropertiesResponse")]
        System.Threading.Tasks.Task SaveUserPropertiesAsync(int userId, VV.Proxy.BioConnectAPI.PropertyDataObject[] properties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserProperty", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserPropertyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VV.Proxy.BioConnectAPI.BioConnectException), Action="http://www.BioConnect.com/IBioConnectAPI/GetUserPropertyBioConnectExceptionFault", Name="BioConnectException", Namespace="http://schemas.datacontract.org/2004/07/Entertech.BiometricService.Api")]
        string GetUserProperty(int userId, string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.BioConnect.com/IBioConnectAPI/GetUserProperty", ReplyAction="http://www.BioConnect.com/IBioConnectAPI/GetUserPropertyResponse")]
        System.Threading.Tasks.Task<string> GetUserPropertyAsync(int userId, string propertyName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBioConnectAPIChannel : VV.Proxy.BioConnectAPI.IBioConnectAPI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BioConnectAPIClient : System.ServiceModel.ClientBase<VV.Proxy.BioConnectAPI.IBioConnectAPI>, VV.Proxy.BioConnectAPI.IBioConnectAPI {
        
        public BioConnectAPIClient() {
        }
        
        public BioConnectAPIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BioConnectAPIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BioConnectAPIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BioConnectAPIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ReconnectDigitusService() {
            base.Channel.ReconnectDigitusService();
        }
        
        public System.Threading.Tasks.Task ReconnectDigitusServiceAsync() {
            return base.Channel.ReconnectDigitusServiceAsync();
        }
        
        public void DigitusLockUnlockSystem(bool value) {
            base.Channel.DigitusLockUnlockSystem(value);
        }
        
        public System.Threading.Tasks.Task DigitusLockUnlockSystemAsync(bool value) {
            return base.Channel.DigitusLockUnlockSystemAsync(value);
        }
        
        public void DigitusLockDevice(string deviceId) {
            base.Channel.DigitusLockDevice(deviceId);
        }
        
        public System.Threading.Tasks.Task DigitusLockDeviceAsync(string deviceId) {
            return base.Channel.DigitusLockDeviceAsync(deviceId);
        }
        
        public void DigitusUnlockDevice(string deviceId) {
            base.Channel.DigitusUnlockDevice(deviceId);
        }
        
        public System.Threading.Tasks.Task DigitusUnlockDeviceAsync(string deviceId) {
            return base.Channel.DigitusUnlockDeviceAsync(deviceId);
        }
        
        public void BeginUserSearch(string filter) {
            base.Channel.BeginUserSearch(filter);
        }
        
        public System.Threading.Tasks.Task BeginUserSearchAsync(string filter) {
            return base.Channel.BeginUserSearchAsync(filter);
        }
        
        public string ReadCard(int deviceId) {
            return base.Channel.ReadCard(deviceId);
        }
        
        public System.Threading.Tasks.Task<string> ReadCardAsync(int deviceId) {
            return base.Channel.ReadCardAsync(deviceId);
        }
        
        public void AuditLogSynchronize(string filter) {
            base.Channel.AuditLogSynchronize(filter);
        }
        
        public System.Threading.Tasks.Task AuditLogSynchronizeAsync(string filter) {
            return base.Channel.AuditLogSynchronizeAsync(filter);
        }
        
        public string LogOut(string clientRegistration, string location, string userName) {
            return base.Channel.LogOut(clientRegistration, location, userName);
        }
        
        public System.Threading.Tasks.Task<string> LogOutAsync(string clientRegistration, string location, string userName) {
            return base.Channel.LogOutAsync(clientRegistration, location, userName);
        }
        
        public bool ResetAcm() {
            return base.Channel.ResetAcm();
        }
        
        public System.Threading.Tasks.Task<bool> ResetAcmAsync() {
            return base.Channel.ResetAcmAsync();
        }
        
        public void UpdateDigitusDeviceGroup(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject dataObj) {
            base.Channel.UpdateDigitusDeviceGroup(dataObj);
        }
        
        public System.Threading.Tasks.Task UpdateDigitusDeviceGroupAsync(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject dataObj) {
            return base.Channel.UpdateDigitusDeviceGroupAsync(dataObj);
        }
        
        public void AddDigitusDeviceGroup(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject dataObj) {
            base.Channel.AddDigitusDeviceGroup(dataObj);
        }
        
        public System.Threading.Tasks.Task AddDigitusDeviceGroupAsync(VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject dataObj) {
            return base.Channel.AddDigitusDeviceGroupAsync(dataObj);
        }
        
        public bool DigitusStatus() {
            return base.Channel.DigitusStatus();
        }
        
        public System.Threading.Tasks.Task<bool> DigitusStatusAsync() {
            return base.Channel.DigitusStatusAsync();
        }
        
        public VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject GetDigitusAccessSchdule(string devicescheduleguid) {
            return base.Channel.GetDigitusAccessSchdule(devicescheduleguid);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject> GetDigitusAccessSchduleAsync(string devicescheduleguid) {
            return base.Channel.GetDigitusAccessSchduleAsync(devicescheduleguid);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusTimebandDataObject GetDigitusTimeband(int timebandid) {
            return base.Channel.GetDigitusTimeband(timebandid);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusTimebandDataObject> GetDigitusTimebandAsync(int timebandid) {
            return base.Channel.GetDigitusTimebandAsync(timebandid);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusDeviceDataObject GetDigitusDevice(string deviceguid) {
            return base.Channel.GetDigitusDevice(deviceguid);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceDataObject> GetDigitusDeviceAsync(string deviceguid) {
            return base.Channel.GetDigitusDeviceAsync(deviceguid);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusEnlineDataObject GetDigitusEnline(string enlineguid) {
            return base.Channel.GetDigitusEnline(enlineguid);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusEnlineDataObject> GetDigitusEnlineAsync(string enlineguid) {
            return base.Channel.GetDigitusEnlineAsync(enlineguid);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject GetDigitusDeviceGroup(string devicegroupguid) {
            return base.Channel.GetDigitusDeviceGroup(devicegroupguid);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject> GetDigitusDeviceGroupAsync(string devicegroupguid) {
            return base.Channel.GetDigitusDeviceGroupAsync(devicegroupguid);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusControllerDataObject GetDigitusController(string controllerguid) {
            return base.Channel.GetDigitusController(controllerguid);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusControllerDataObject> GetDigitusControllerAsync(string controllerguid) {
            return base.Channel.GetDigitusControllerAsync(controllerguid);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject GetDigitusControllerNode(string controllerguid, int nodeserialnumber) {
            return base.Channel.GetDigitusControllerNode(controllerguid, nodeserialnumber);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject> GetDigitusControllerNodeAsync(string controllerguid, int nodeserialnumber) {
            return base.Channel.GetDigitusControllerNodeAsync(controllerguid, nodeserialnumber);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusAlarmDataObject GetDigitusAlarm(string alarmguid) {
            return base.Channel.GetDigitusAlarm(alarmguid);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusAlarmDataObject> GetDigitusAlarmAsync(string alarmguid) {
            return base.Channel.GetDigitusAlarmAsync(alarmguid);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusEventDataObject GetDigitusEvent(string eventguid) {
            return base.Channel.GetDigitusEvent(eventguid);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusEventDataObject> GetDigitusEventAsync(string eventguid) {
            return base.Channel.GetDigitusEventAsync(eventguid);
        }
        
        public string[] GetDigitusAvailableUserPins() {
            return base.Channel.GetDigitusAvailableUserPins();
        }
        
        public System.Threading.Tasks.Task<string[]> GetDigitusAvailableUserPinsAsync() {
            return base.Channel.GetDigitusAvailableUserPinsAsync();
        }
        
        public VV.Proxy.BioConnectAPI.UsersDataObject[] FindUser(string fragment) {
            return base.Channel.FindUser(fragment);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.UsersDataObject[]> FindUserAsync(string fragment) {
            return base.Channel.FindUserAsync(fragment);
        }
        
        public VV.Proxy.BioConnectAPI.UsersDataObject GetUserByID(int id) {
            return base.Channel.GetUserByID(id);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.UsersDataObject> GetUserByIDAsync(int id) {
            return base.Channel.GetUserByIDAsync(id);
        }
        
        public VV.Proxy.BioConnectAPI.ReadersStubDataObject[] GetReaderIDs(string filterStr, string location) {
            return base.Channel.GetReaderIDs(filterStr, location);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReadersStubDataObject[]> GetReaderIDsAsync(string filterStr, string location) {
            return base.Channel.GetReaderIDsAsync(filterStr, location);
        }
        
        public VV.Proxy.BioConnectAPI.ReadersDataObject GetReaderDetailsByID(int id) {
            return base.Channel.GetReaderDetailsByID(id);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReadersDataObject> GetReaderDetailsByIDAsync(int id) {
            return base.Channel.GetReaderDetailsByIDAsync(id);
        }
        
        public VV.Proxy.BioConnectAPI.ReadersDataObject[] GetReaders() {
            return base.Channel.GetReaders();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReadersDataObject[]> GetReadersAsync() {
            return base.Channel.GetReadersAsync();
        }
        
        public VV.Proxy.BioConnectAPI.ReadersBasicInfoDataObject[] GetReadersBasicInfo(string filterStr) {
            return base.Channel.GetReadersBasicInfo(filterStr);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReadersBasicInfoDataObject[]> GetReadersBasicInfoAsync(string filterStr) {
            return base.Channel.GetReadersBasicInfoAsync(filterStr);
        }
        
        public void SaveReader(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            base.Channel.SaveReader(readerDataObject, token);
        }
        
        public System.Threading.Tasks.Task SaveReaderAsync(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            return base.Channel.SaveReaderAsync(readerDataObject, token);
        }
        
        public void ScanUserFaceData(uint deviceid, int userid, int index, VV.Proxy.BioConnectAPI.SecurityTokenDto token, string[] selectedLocations) {
            base.Channel.ScanUserFaceData(deviceid, userid, index, token, selectedLocations);
        }
        
        public System.Threading.Tasks.Task ScanUserFaceDataAsync(uint deviceid, int userid, int index, VV.Proxy.BioConnectAPI.SecurityTokenDto token, string[] selectedLocations) {
            return base.Channel.ScanUserFaceDataAsync(deviceid, userid, index, token, selectedLocations);
        }
        
        public void UpdateReaderConfig(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, bool bReset) {
            base.Channel.UpdateReaderConfig(readerDataObject, bReset);
        }
        
        public System.Threading.Tasks.Task UpdateReaderConfigAsync(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, bool bReset) {
            return base.Channel.UpdateReaderConfigAsync(readerDataObject, bReset);
        }
        
        public int SaveScannedTemplate(VV.Proxy.BioConnectAPI.TemplateObject scannedTemplate, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            return base.Channel.SaveScannedTemplate(scannedTemplate, token);
        }
        
        public System.Threading.Tasks.Task<int> SaveScannedTemplateAsync(VV.Proxy.BioConnectAPI.TemplateObject scannedTemplate, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            return base.Channel.SaveScannedTemplateAsync(scannedTemplate, token);
        }
        
        public void SaveDigitusTemplates(VV.Proxy.BioConnectAPI.TemplateObject[] scannedTemplates, string Name, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            base.Channel.SaveDigitusTemplates(scannedTemplates, Name, token);
        }
        
        public System.Threading.Tasks.Task SaveDigitusTemplatesAsync(VV.Proxy.BioConnectAPI.TemplateObject[] scannedTemplates, string Name, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            return base.Channel.SaveDigitusTemplatesAsync(scannedTemplates, Name, token);
        }
        
        public VV.Proxy.BioConnectAPI.ReaderDescriptionsDataObject GertReaderDescriptions() {
            return base.Channel.GertReaderDescriptions();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReaderDescriptionsDataObject> GertReaderDescriptionsAsync() {
            return base.Channel.GertReaderDescriptionsAsync();
        }
        
        public System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.FingerDataObject.FingerCode, string> GetFingerDescriptions() {
            return base.Channel.GetFingerDescriptions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<VV.Proxy.BioConnectAPI.FingerDataObject.FingerCode, string>> GetFingerDescriptionsAsync() {
            return base.Channel.GetFingerDescriptionsAsync();
        }
        
        public VV.Proxy.BioConnectAPI.TemplateObject GetTemplateObject(long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto token, int quality) {
            return base.Channel.GetTemplateObject(deviceID, token, quality);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.TemplateObject> GetTemplateObjectAsync(long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto token, int quality) {
            return base.Channel.GetTemplateObjectAsync(deviceID, token, quality);
        }
        
        public void DeleteTemplate(int templateID, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            base.Channel.DeleteTemplate(templateID, token);
        }
        
        public System.Threading.Tasks.Task DeleteTemplateAsync(int templateID, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            return base.Channel.DeleteTemplateAsync(templateID, token);
        }
        
        public void SaveUserAdmin(VV.Proxy.BioConnectAPI.UsersAdminDataObject usersDataObject) {
            base.Channel.SaveUserAdmin(usersDataObject);
        }
        
        public System.Threading.Tasks.Task SaveUserAdminAsync(VV.Proxy.BioConnectAPI.UsersAdminDataObject usersDataObject) {
            return base.Channel.SaveUserAdminAsync(usersDataObject);
        }
        
        public VV.Proxy.BioConnectAPI.SecurityTokenDto RetrieveSecurityToken(string username, string password) {
            return base.Channel.RetrieveSecurityToken(username, password);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.SecurityTokenDto> RetrieveSecurityTokenAsync(string username, string password) {
            return base.Channel.RetrieveSecurityTokenAsync(username, password);
        }
        
        public string AuthroizeUserLogin(string username, string password, string location) {
            return base.Channel.AuthroizeUserLogin(username, password, location);
        }
        
        public System.Threading.Tasks.Task<string> AuthroizeUserLoginAsync(string username, string password, string location) {
            return base.Channel.AuthroizeUserLoginAsync(username, password, location);
        }
        
        public bool AuthenticateUser(string username, string password) {
            return base.Channel.AuthenticateUser(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateUserAsync(string username, string password) {
            return base.Channel.AuthenticateUserAsync(username, password);
        }
        
        public string RetrieveLocations() {
            return base.Channel.RetrieveLocations();
        }
        
        public System.Threading.Tasks.Task<string> RetrieveLocationsAsync() {
            return base.Channel.RetrieveLocationsAsync();
        }
        
        public VV.Proxy.BioConnectAPI.UsersDataObject[] FindUserInLocation(string fragment, string location) {
            return base.Channel.FindUserInLocation(fragment, location);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.UsersDataObject[]> FindUserInLocationAsync(string fragment, string location) {
            return base.Channel.FindUserInLocationAsync(fragment, location);
        }
        
        public string AcmType() {
            return base.Channel.AcmType();
        }
        
        public System.Threading.Tasks.Task<string> AcmTypeAsync() {
            return base.Channel.AcmTypeAsync();
        }
        
        public void Synchronize(System.DateTime dateToSyncFrom, string username, string LastUsedIP) {
            base.Channel.Synchronize(dateToSyncFrom, username, LastUsedIP);
        }
        
        public System.Threading.Tasks.Task SynchronizeAsync(System.DateTime dateToSyncFrom, string username, string LastUsedIP) {
            return base.Channel.SynchronizeAsync(dateToSyncFrom, username, LastUsedIP);
        }
        
        public void SynchronizeAllReaders(string username, string LastusedIP, string location) {
            base.Channel.SynchronizeAllReaders(username, LastusedIP, location);
        }
        
        public System.Threading.Tasks.Task SynchronizeAllReadersAsync(string username, string LastusedIP, string location) {
            return base.Channel.SynchronizeAllReadersAsync(username, LastusedIP, location);
        }
        
        public string ServerVersion() {
            return base.Channel.ServerVersion();
        }
        
        public System.Threading.Tasks.Task<string> ServerVersionAsync() {
            return base.Channel.ServerVersionAsync();
        }
        
        public VV.Proxy.BioConnectAPI.SecurityTokenDto RetrieveSecurityTokenByUsername(string username) {
            return base.Channel.RetrieveSecurityTokenByUsername(username);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.SecurityTokenDto> RetrieveSecurityTokenByUsernameAsync(string username) {
            return base.Channel.RetrieveSecurityTokenByUsernameAsync(username);
        }
        
        public VV.Proxy.BioConnectAPI.SecurityTokenDto RetrieveSecurityTokenById(string userId) {
            return base.Channel.RetrieveSecurityTokenById(userId);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.SecurityTokenDto> RetrieveSecurityTokenByIdAsync(string userId) {
            return base.Channel.RetrieveSecurityTokenByIdAsync(userId);
        }
        
        public void SaveSecurityToken(VV.Proxy.BioConnectAPI.SecurityTokenDto tokenToSave, VV.Proxy.BioConnectAPI.SecurityTokenDto requestedBy) {
            base.Channel.SaveSecurityToken(tokenToSave, requestedBy);
        }
        
        public System.Threading.Tasks.Task SaveSecurityTokenAsync(VV.Proxy.BioConnectAPI.SecurityTokenDto tokenToSave, VV.Proxy.BioConnectAPI.SecurityTokenDto requestedBy) {
            return base.Channel.SaveSecurityTokenAsync(tokenToSave, requestedBy);
        }
        
        public VV.Proxy.BioConnectAPI.ActivityRecordsDataObject[] GetLatestActivityRecords() {
            return base.Channel.GetLatestActivityRecords();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ActivityRecordsDataObject[]> GetLatestActivityRecordsAsync() {
            return base.Channel.GetLatestActivityRecordsAsync();
        }
        
        public VV.Proxy.BioConnectAPI.UsersStubDataObject[] GetUserIdList(string filter) {
            return base.Channel.GetUserIdList(filter);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.UsersStubDataObject[]> GetUserIdListAsync(string filter) {
            return base.Channel.GetUserIdListAsync(filter);
        }
        
        public int[] FilterUsersByCard(string filter) {
            return base.Channel.FilterUsersByCard(filter);
        }
        
        public System.Threading.Tasks.Task<int[]> FilterUsersByCardAsync(string filter) {
            return base.Channel.FilterUsersByCardAsync(filter);
        }
        
        public void RestartReader(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject) {
            base.Channel.RestartReader(readerDataObject);
        }
        
        public System.Threading.Tasks.Task RestartReaderAsync(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject) {
            return base.Channel.RestartReaderAsync(readerDataObject);
        }
        
        public string UpdateFirmware(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, byte[] firmwareFile) {
            return base.Channel.UpdateFirmware(readerDataObject, firmwareFile);
        }
        
        public System.Threading.Tasks.Task<string> UpdateFirmwareAsync(VV.Proxy.BioConnectAPI.ReadersDataObject readerDataObject, byte[] firmwareFile) {
            return base.Channel.UpdateFirmwareAsync(readerDataObject, firmwareFile);
        }
        
        public string AuthenticateADUser(string username) {
            return base.Channel.AuthenticateADUser(username);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateADUserAsync(string username) {
            return base.Channel.AuthenticateADUserAsync(username);
        }
        
        public VV.Proxy.BioConnectAPI.ReadersCountsDataObject GetReadersCounts() {
            return base.Channel.GetReadersCounts();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.ReadersCountsDataObject> GetReadersCountsAsync() {
            return base.Channel.GetReadersCountsAsync();
        }
        
        public void DeleteReader(int readerID) {
            base.Channel.DeleteReader(readerID);
        }
        
        public System.Threading.Tasks.Task DeleteReaderAsync(int readerID) {
            return base.Channel.DeleteReaderAsync(readerID);
        }
        
        public string[] GetUserBadgeNumbers(int userID) {
            return base.Channel.GetUserBadgeNumbers(userID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserBadgeNumbersAsync(int userID) {
            return base.Channel.GetUserBadgeNumbersAsync(userID);
        }
        
        public void UpdateCardsSettings(VV.Proxy.BioConnectAPI.CardDataObject[] cards) {
            base.Channel.UpdateCardsSettings(cards);
        }
        
        public System.Threading.Tasks.Task UpdateCardsSettingsAsync(VV.Proxy.BioConnectAPI.CardDataObject[] cards) {
            return base.Channel.UpdateCardsSettingsAsync(cards);
        }
        
        public string SiteCode() {
            return base.Channel.SiteCode();
        }
        
        public System.Threading.Tasks.Task<string> SiteCodeAsync() {
            return base.Channel.SiteCodeAsync();
        }
        
        public string SiteKey(string siteKey1) {
            return base.Channel.SiteKey(siteKey1);
        }
        
        public System.Threading.Tasks.Task<string> SiteKeyAsync(string siteKey) {
            return base.Channel.SiteKeyAsync(siteKey);
        }
        
        public System.Collections.Generic.Dictionary<string, string> Restrictions() {
            return base.Channel.Restrictions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> RestrictionsAsync() {
            return base.Channel.RestrictionsAsync();
        }
        
        public string GetLicensePath() {
            return base.Channel.GetLicensePath();
        }
        
        public System.Threading.Tasks.Task<string> GetLicensePathAsync() {
            return base.Channel.GetLicensePathAsync();
        }
        
        public string FormatCard(long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            return base.Channel.FormatCard(deviceID, token);
        }
        
        public System.Threading.Tasks.Task<string> FormatCardAsync(long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            return base.Channel.FormatCardAsync(deviceID, token);
        }
        
        public bool isServerLoaded() {
            return base.Channel.isServerLoaded();
        }
        
        public System.Threading.Tasks.Task<bool> isServerLoadedAsync() {
            return base.Channel.isServerLoadedAsync();
        }
        
        public string WriteToCard(long readerID, int userID, int primaryTemplateId, int secondaryTemplateId, VV.Proxy.BioConnectAPI.SecurityTokenDto Token) {
            return base.Channel.WriteToCard(readerID, userID, primaryTemplateId, secondaryTemplateId, Token);
        }
        
        public System.Threading.Tasks.Task<string> WriteToCardAsync(long readerID, int userID, int primaryTemplateId, int secondaryTemplateId, VV.Proxy.BioConnectAPI.SecurityTokenDto Token) {
            return base.Channel.WriteToCardAsync(readerID, userID, primaryTemplateId, secondaryTemplateId, Token);
        }
        
        public int GetUserIdByBadgeNumber(long badgeNumber) {
            return base.Channel.GetUserIdByBadgeNumber(badgeNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdByBadgeNumberAsync(long badgeNumber) {
            return base.Channel.GetUserIdByBadgeNumberAsync(badgeNumber);
        }
        
        public System.DateTime GetLicenseExpiry() {
            return base.Channel.GetLicenseExpiry();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetLicenseExpiryAsync() {
            return base.Channel.GetLicenseExpiryAsync();
        }
        
        public bool GetLicenseActive() {
            return base.Channel.GetLicenseActive();
        }
        
        public System.Threading.Tasks.Task<bool> GetLicenseActiveAsync() {
            return base.Channel.GetLicenseActiveAsync();
        }
        
        public void SaveAppSettings(System.Collections.Generic.Dictionary<string, string> dictSettings) {
            base.Channel.SaveAppSettings(dictSettings);
        }
        
        public System.Threading.Tasks.Task SaveAppSettingsAsync(System.Collections.Generic.Dictionary<string, string> dictSettings) {
            return base.Channel.SaveAppSettingsAsync(dictSettings);
        }
        
        public System.Collections.Generic.Dictionary<string, object> GetAppSettings() {
            return base.Channel.GetAppSettings();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>> GetAppSettingsAsync() {
            return base.Channel.GetAppSettingsAsync();
        }
        
        public void DatabaseImport(string connectionString) {
            base.Channel.DatabaseImport(connectionString);
        }
        
        public System.Threading.Tasks.Task DatabaseImportAsync(string connectionString) {
            return base.Channel.DatabaseImportAsync(connectionString);
        }
        
        public byte[] GetUserImage(int userid, int index) {
            return base.Channel.GetUserImage(userid, index);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetUserImageAsync(int userid, int index) {
            return base.Channel.GetUserImageAsync(userid, index);
        }
        
        public void UpdateReaderTime(System.DateTime devtime, long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto Token) {
            base.Channel.UpdateReaderTime(devtime, deviceID, Token);
        }
        
        public System.Threading.Tasks.Task UpdateReaderTimeAsync(System.DateTime devtime, long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto Token) {
            return base.Channel.UpdateReaderTimeAsync(devtime, deviceID, Token);
        }
        
        public System.DateTime GetReaderTime(System.DateTime devtime, long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto Token) {
            return base.Channel.GetReaderTime(devtime, deviceID, Token);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetReaderTimeAsync(System.DateTime devtime, long deviceID, VV.Proxy.BioConnectAPI.SecurityTokenDto Token) {
            return base.Channel.GetReaderTimeAsync(devtime, deviceID, Token);
        }
        
        public void SaveUserFaceLocations(int userid, string[] selectedLocations, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            base.Channel.SaveUserFaceLocations(userid, selectedLocations, token);
        }
        
        public System.Threading.Tasks.Task SaveUserFaceLocationsAsync(int userid, string[] selectedLocations, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            return base.Channel.SaveUserFaceLocationsAsync(userid, selectedLocations, token);
        }
        
        public void GenerateHealthCheck(System.DateTime startTime, System.DateTime endTime) {
            base.Channel.GenerateHealthCheck(startTime, endTime);
        }
        
        public System.Threading.Tasks.Task GenerateHealthCheckAsync(System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GenerateHealthCheckAsync(startTime, endTime);
        }
        
        public void SynchronizeUserLocations(int userId, string[] selectedLocations, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            base.Channel.SynchronizeUserLocations(userId, selectedLocations, token);
        }
        
        public System.Threading.Tasks.Task SynchronizeUserLocationsAsync(int userId, string[] selectedLocations, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            return base.Channel.SynchronizeUserLocationsAsync(userId, selectedLocations, token);
        }
        
        public VV.Proxy.BioConnectAPI.UsersStubDataObject[] GetUserListByIds(int[] changes) {
            return base.Channel.GetUserListByIds(changes);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.UsersStubDataObject[]> GetUserListByIdsAsync(int[] changes) {
            return base.Channel.GetUserListByIdsAsync(changes);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject[] GetDigitusConnectionsList() {
            return base.Channel.GetDigitusConnectionsList();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject[]> GetDigitusConnectionsListAsync() {
            return base.Channel.GetDigitusConnectionsListAsync();
        }
        
        public VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject[] GetDigitusDeviceGroupList() {
            return base.Channel.GetDigitusDeviceGroupList();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceGroupDataObject[]> GetDigitusDeviceGroupListAsync() {
            return base.Channel.GetDigitusDeviceGroupListAsync();
        }
        
        public VV.Proxy.BioConnectAPI.DigitusControllerDataObject[] GetDigitusBusControllers(string groupId) {
            return base.Channel.GetDigitusBusControllers(groupId);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusControllerDataObject[]> GetDigitusBusControllersAsync(string groupId) {
            return base.Channel.GetDigitusBusControllersAsync(groupId);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusControllerDataObject[] GetDigitusSentryControllers(string groupId) {
            return base.Channel.GetDigitusSentryControllers(groupId);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusControllerDataObject[]> GetDigitusSentryControllersAsync(string groupId) {
            return base.Channel.GetDigitusSentryControllersAsync(groupId);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject[] GetDigitusBusControllerNodes(string controllerId, string groupId) {
            return base.Channel.GetDigitusBusControllerNodes(controllerId, groupId);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject[]> GetDigitusBusControllerNodesAsync(string controllerId, string groupId) {
            return base.Channel.GetDigitusBusControllerNodesAsync(controllerId, groupId);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusEnlineDataObject[] GetDigitusBusControllerEnlines(string controllerId, string groupId) {
            return base.Channel.GetDigitusBusControllerEnlines(controllerId, groupId);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusEnlineDataObject[]> GetDigitusBusControllerEnlinesAsync(string controllerId, string groupId) {
            return base.Channel.GetDigitusBusControllerEnlinesAsync(controllerId, groupId);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[] GetDigitusBusControllerNodeDevices(string controllerId, int nodeSerialNumber, string groupId) {
            return base.Channel.GetDigitusBusControllerNodeDevices(controllerId, nodeSerialNumber, groupId);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[]> GetDigitusBusControllerNodeDevicesAsync(string controllerId, int nodeSerialNumber, string groupId) {
            return base.Channel.GetDigitusBusControllerNodeDevicesAsync(controllerId, nodeSerialNumber, groupId);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[] GetDigitusSentryControllerDevices(string controllerId, string groupId) {
            return base.Channel.GetDigitusSentryControllerDevices(controllerId, groupId);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[]> GetDigitusSentryControllerDevicesAsync(string controllerId, string groupId) {
            return base.Channel.GetDigitusSentryControllerDevicesAsync(controllerId, groupId);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[] GetAllDigitusDevices(string controllerId, int nodeSerialNumber, string groupId) {
            return base.Channel.GetAllDigitusDevices(controllerId, nodeSerialNumber, groupId);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceDataObject[]> GetAllDigitusDevicesAsync(string controllerId, int nodeSerialNumber, string groupId) {
            return base.Channel.GetAllDigitusDevicesAsync(controllerId, nodeSerialNumber, groupId);
        }
        
        public VV.Proxy.BioConnectAPI.DigitusTimebandDataObject[] GetDigitusTimeBands() {
            return base.Channel.GetDigitusTimeBands();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusTimebandDataObject[]> GetDigitusTimeBandsAsync() {
            return base.Channel.GetDigitusTimeBandsAsync();
        }
        
        public VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[] GetDigitusAccessScheduleList() {
            return base.Channel.GetDigitusAccessScheduleList();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[]> GetDigitusAccessScheduleListAsync() {
            return base.Channel.GetDigitusAccessScheduleListAsync();
        }
        
        public VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[] GetDigitusAccessSchedulesOnly() {
            return base.Channel.GetDigitusAccessSchedulesOnly();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject[]> GetDigitusAccessSchedulesOnlyAsync() {
            return base.Channel.GetDigitusAccessSchedulesOnlyAsync();
        }
        
        public VV.Proxy.BioConnectAPI.DigitusEventDataObject[] GetLatestDigitusEvents() {
            return base.Channel.GetLatestDigitusEvents();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusEventDataObject[]> GetLatestDigitusEventsAsync() {
            return base.Channel.GetLatestDigitusEventsAsync();
        }
        
        public VV.Proxy.BioConnectAPI.DigitusAlarmDataObject[] GetLatestDigitusAlarms() {
            return base.Channel.GetLatestDigitusAlarms();
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusAlarmDataObject[]> GetLatestDigitusAlarmsAsync() {
            return base.Channel.GetLatestDigitusAlarmsAsync();
        }
        
        public VV.Proxy.BioConnectAPI.DigitusAlarmDataObject AcknowledgeDigitusAlarm(string alarmId) {
            return base.Channel.AcknowledgeDigitusAlarm(alarmId);
        }
        
        public System.Threading.Tasks.Task<VV.Proxy.BioConnectAPI.DigitusAlarmDataObject> AcknowledgeDigitusAlarmAsync(string alarmId) {
            return base.Channel.AcknowledgeDigitusAlarmAsync(alarmId);
        }
        
        public int SaveDigitusConnectionInfo(VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject dataObject) {
            return base.Channel.SaveDigitusConnectionInfo(dataObject);
        }
        
        public System.Threading.Tasks.Task<int> SaveDigitusConnectionInfoAsync(VV.Proxy.BioConnectAPI.DigitusConnectionInfoDataObject dataObject) {
            return base.Channel.SaveDigitusConnectionInfoAsync(dataObject);
        }
        
        public void DeleteDigitusConnectionInfo(int id) {
            base.Channel.DeleteDigitusConnectionInfo(id);
        }
        
        public System.Threading.Tasks.Task DeleteDigitusConnectionInfoAsync(int id) {
            return base.Channel.DeleteDigitusConnectionInfoAsync(id);
        }
        
        public void DeleteFaceEnrollment(int usersDataObjectId, int selectedEnrollmentTypeInd, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            base.Channel.DeleteFaceEnrollment(usersDataObjectId, selectedEnrollmentTypeInd, token);
        }
        
        public System.Threading.Tasks.Task DeleteFaceEnrollmentAsync(int usersDataObjectId, int selectedEnrollmentTypeInd, VV.Proxy.BioConnectAPI.SecurityTokenDto token) {
            return base.Channel.DeleteFaceEnrollmentAsync(usersDataObjectId, selectedEnrollmentTypeInd, token);
        }
        
        public bool CheckUsername(string username, int userId) {
            return base.Channel.CheckUsername(username, userId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUsernameAsync(string username, int userId) {
            return base.Channel.CheckUsernameAsync(username, userId);
        }
        
        public void UpdateDigitusDevice(VV.Proxy.BioConnectAPI.DigitusDeviceDataObject digitusDeviceDataObject) {
            base.Channel.UpdateDigitusDevice(digitusDeviceDataObject);
        }
        
        public System.Threading.Tasks.Task UpdateDigitusDeviceAsync(VV.Proxy.BioConnectAPI.DigitusDeviceDataObject digitusDeviceDataObject) {
            return base.Channel.UpdateDigitusDeviceAsync(digitusDeviceDataObject);
        }
        
        public void UpdateDigitusEnline(VV.Proxy.BioConnectAPI.DigitusEnlineDataObject digitusEnlineDataObject) {
            base.Channel.UpdateDigitusEnline(digitusEnlineDataObject);
        }
        
        public System.Threading.Tasks.Task UpdateDigitusEnlineAsync(VV.Proxy.BioConnectAPI.DigitusEnlineDataObject digitusEnlineDataObject) {
            return base.Channel.UpdateDigitusEnlineAsync(digitusEnlineDataObject);
        }
        
        public void UpdateDigitusController(VV.Proxy.BioConnectAPI.DigitusControllerDataObject digitusControllerDataObject) {
            base.Channel.UpdateDigitusController(digitusControllerDataObject);
        }
        
        public System.Threading.Tasks.Task UpdateDigitusControllerAsync(VV.Proxy.BioConnectAPI.DigitusControllerDataObject digitusControllerDataObject) {
            return base.Channel.UpdateDigitusControllerAsync(digitusControllerDataObject);
        }
        
        public void UpdateDigitusControllerNode(VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject digitusControllerNodeDataObject) {
            base.Channel.UpdateDigitusControllerNode(digitusControllerNodeDataObject);
        }
        
        public System.Threading.Tasks.Task UpdateDigitusControllerNodeAsync(VV.Proxy.BioConnectAPI.DigitusControllerNodeDataObject digitusControllerNodeDataObject) {
            return base.Channel.UpdateDigitusControllerNodeAsync(digitusControllerNodeDataObject);
        }
        
        public void UpdateDigitusTimeband(VV.Proxy.BioConnectAPI.DigitusTimebandDataObject dataObject) {
            base.Channel.UpdateDigitusTimeband(dataObject);
        }
        
        public System.Threading.Tasks.Task UpdateDigitusTimebandAsync(VV.Proxy.BioConnectAPI.DigitusTimebandDataObject dataObject) {
            return base.Channel.UpdateDigitusTimebandAsync(dataObject);
        }
        
        public void UpdateDigitusDeviceScheduleGroup(VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject dataObject) {
            base.Channel.UpdateDigitusDeviceScheduleGroup(dataObject);
        }
        
        public System.Threading.Tasks.Task UpdateDigitusDeviceScheduleGroupAsync(VV.Proxy.BioConnectAPI.DigitusDeviceScheduleDataObject dataObject) {
            return base.Channel.UpdateDigitusDeviceScheduleGroupAsync(dataObject);
        }
        
        public void SaveUserProperties(int userId, VV.Proxy.BioConnectAPI.PropertyDataObject[] properties) {
            base.Channel.SaveUserProperties(userId, properties);
        }
        
        public System.Threading.Tasks.Task SaveUserPropertiesAsync(int userId, VV.Proxy.BioConnectAPI.PropertyDataObject[] properties) {
            return base.Channel.SaveUserPropertiesAsync(userId, properties);
        }
        
        public string GetUserProperty(int userId, string propertyName) {
            return base.Channel.GetUserProperty(userId, propertyName);
        }
        
        public System.Threading.Tasks.Task<string> GetUserPropertyAsync(int userId, string propertyName) {
            return base.Channel.GetUserPropertyAsync(userId, propertyName);
        }
    }
}
